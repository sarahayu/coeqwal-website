{"version":3,"file":"static/js/805.6600bdbe.chunk.js","mappings":"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","sources":["App.jsx","AppContext.jsx","bucket-lib/utils.js","data/descriptions-data.jsx","data/objectives-data.jsx","settings.jsx","three-resources.jsx","utils/app-utils.jsx","utils/data-utils.jsx","utils/math-utils.jsx","utils/misc-utils.jsx","utils/render-utils.jsx","views/CompareView.jsx","views/ExamineView.jsx","views/WideView.jsx"],"sourcesContent":["import * as d3 from \"d3\";\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { AppContext } from \"AppContext\";\r\n\r\nimport { useStateRef } from \"utils/misc-utils\";\r\nimport { initWaterdrops } from \"utils/app-utils\";\r\n\r\nimport WideView from \"views/WideView\";\r\nimport ExamineView from \"views/ExamineView\";\r\nimport CompareView from \"views/CompareView\";\r\n\r\nimport {\r\n  scene,\r\n  camera,\r\n  renderer,\r\n  dropsMesh,\r\n  pointsMesh,\r\n} from \"three-resources\";\r\n\r\n// pre-calculate these so we don't lag later\r\nconst waterdrops = initWaterdrops(\"objective\");\r\n\r\nconst appWidth = window.innerWidth,\r\n  appHeight = window.innerHeight;\r\n\r\nrenderer.setSize(appWidth, appHeight);\r\n\r\nconsole.time(\"drops mesh creating\");\r\ndropsMesh.createMesh(waterdrops);\r\nconsole.timeEnd(\"drops mesh creating\");\r\n\r\n// pointsMesh.createMesh(waterdrops);\r\n\r\nexport default function App() {\r\n  const [state, setState, stateRef] = useStateRef({});\r\n  const [zoomCallbacks, setZoomCallbacks, zoomCallbacksRef] = useStateRef([]);\r\n  const [activeWaterdrops, setActiveWaterdrops] = useState([]);\r\n  const [goBack, setGoBack] = useState(null);\r\n  const [\r\n    disableCamAdjustments,\r\n    setDisableCamAdjustments,\r\n    disableCamAdjustmentsRef,\r\n  ] = useStateRef(false);\r\n\r\n  const getOutlineOpac = useCallback(\r\n    d3\r\n      .scaleLinear()\r\n      .domain([\r\n        appHeight / waterdrops.height,\r\n        appHeight / waterdrops.groups[0].height,\r\n      ])\r\n      .range([0.1, 1])\r\n      .clamp(true),\r\n    []\r\n  );\r\n\r\n  useEffect(function initialize() {\r\n    document.querySelector(\"#mosaic-webgl\").appendChild(renderer.domElement);\r\n\r\n    d3.select(\"#mosaic-svg\")\r\n      .attr(\"width\", appWidth)\r\n      .attr(\"height\", appHeight)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-trans\");\r\n\r\n    camera.mount(\r\n      d3.select(\".bubbles-wrapper\").node(),\r\n      d3.select(\"#mosaic-svg\").select(\".svg-trans\").node()\r\n    );\r\n    camera.setZoomFn((transform) => {\r\n      if (!disableCamAdjustmentsRef.current) {\r\n        dropsMesh.updateOutlineVisibility(getOutlineOpac(transform.k));\r\n      }\r\n\r\n      for (const cb of zoomCallbacksRef.current) cb(transform);\r\n    });\r\n    camera.setSize(appWidth, appHeight);\r\n\r\n    renderer.setAnimationLoop(() => {\r\n      renderer.render(scene, camera.camera);\r\n    });\r\n\r\n    resetCamera(false);\r\n    setState({ state: \"WideView\" });\r\n  }, []);\r\n\r\n  const resetCamera = useCallback((animated = true, callback) => {\r\n    const pos = [\r\n      0,\r\n      -waterdrops.height * 0.08,\r\n      camera.getZFromFarHeight(waterdrops.height),\r\n    ];\r\n    if (animated) {\r\n      const { start } = zoomTo(pos, callback);\r\n      start();\r\n    } else {\r\n      camera.callZoomFromWorldViewport({\r\n        worldX: pos[0],\r\n        worldY: -pos[1],\r\n        farHeight: waterdrops.height,\r\n      });\r\n      callback && callback();\r\n    }\r\n  }, []);\r\n\r\n  const zoomTo = useCallback((xyz, callback) => {\r\n    const i = camera.interpolateZoomCamera(xyz);\r\n\r\n    const duration = i.duration / 2;\r\n\r\n    const start = () => {\r\n      const t = d3.timer((elapsed) => {\r\n        const et = Math.min(elapsed / duration, 1);\r\n        camera.callZoom(i(et));\r\n\r\n        if (et === 1) {\r\n          t.stop();\r\n          callback && callback();\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      start,\r\n      duration,\r\n    };\r\n  }, []);\r\n\r\n  const addZoomHandler = useCallback((cb) => {\r\n    setZoomCallbacks((cbs) => [...cbs, cb]);\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        appWidth,\r\n        appHeight,\r\n        state,\r\n        setState,\r\n        activeWaterdrops,\r\n        setActiveWaterdrops,\r\n        setDisableCamAdjustments,\r\n        waterdrops,\r\n        scene,\r\n        camera,\r\n        renderer,\r\n        pointsMesh,\r\n        dropsMesh,\r\n        setGoBack,\r\n        zoomTo,\r\n        resetCamera,\r\n        getOutlineOpac,\r\n        addZoomHandler,\r\n      }}\r\n    >\r\n      <div className=\"bubbles-wrapper\">\r\n        <div id=\"mosaic-webgl\"></div>\r\n        <svg id=\"mosaic-svg\"></svg>\r\n      </div>\r\n      <WideView />\r\n      <ExamineView />\r\n      <CompareView />\r\n      {goBack && (\r\n        <button className=\"go-back-btn\" onClick={goBack}>\r\n          ←\r\n        </button>\r\n      )}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext({});\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"utils/misc-utils\";\r\n\r\nexport const DESCRIPTIONS_DATA = await (async function load() {\r\n  const objs = await (await fetch(\"./descriptions.json\")).json();\r\n\r\n  console.log(\"DATA: loading descriptions data\");\r\n\r\n  return mapBy(objs, ({ id }) => id);\r\n})();\r\n","import * as d3 from \"d3\";\r\n\r\nimport { clamp } from \"utils/math-utils\";\r\nimport { mapBy } from \"utils/misc-utils\";\r\n\r\nconst SCEN_DIVISOR = 1; // debugging purposes, don't render all scenarios to speed things up\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const OBJECTIVES_DATA = await (async function load() {\r\n  const objs = await (await fetch(\"./objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) => clamp(v, 0, MAX_DELIVS));\r\n\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const OBJECTIVE_IDS = Object.keys(OBJECTIVES_DATA);\r\n\r\nconst _SCENARIO_IDS = Object.keys(\r\n  Object.values(OBJECTIVES_DATA)[0][SCENARIO_KEY_STRING]\r\n);\r\n\r\nexport const SCENARIO_IDS = _SCENARIO_IDS.filter(\r\n  (_, i) => i % SCEN_DIVISOR === 0\r\n);\r\n\r\n// Flattening hierarchical data makes it more flexible for classifying\r\n// (from experience). id conveniently corresponds to index.\r\n// Also cache classifications (by objective and by scenario, for now)\r\nexport const [FLATTENED_DATA, DATA_GROUPINGS] = (function preprocessData() {\r\n  const flattenedData = [];\r\n  const dataGroupings = {\r\n    objective: {},\r\n    scenario: {},\r\n  };\r\n\r\n  // for ordering later\r\n  const means = [];\r\n\r\n  let idx = 0;\r\n  for (const obj of OBJECTIVE_IDS) {\r\n    for (const scen of SCENARIO_IDS) {\r\n      if (!dataGroupings[\"objective\"][obj])\r\n        dataGroupings[\"objective\"][obj] = [];\r\n\r\n      if (!dataGroupings[\"scenario\"][scen])\r\n        dataGroupings[\"scenario\"][scen] = [];\r\n\r\n      dataGroupings[\"objective\"][obj].push(idx);\r\n      dataGroupings[\"scenario\"][scen].push(idx);\r\n\r\n      const deliveries =\r\n        OBJECTIVES_DATA[obj][SCENARIO_KEY_STRING][scen][DELIV_KEY_STRING];\r\n\r\n      flattenedData.push({\r\n        id: idx,\r\n        objective: obj,\r\n        scenario: scen,\r\n        deliveries,\r\n      });\r\n\r\n      means.push(d3.mean(deliveries));\r\n\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  const orderedDataGroupings = {};\r\n\r\n  for (const criteria of Object.keys(dataGroupings)) {\r\n    const asdfasdf = [];\r\n    for (const key of Object.keys(dataGroupings[criteria])) {\r\n      const ids = dataGroupings[criteria][key];\r\n      const sortedObjScens = ids.sort((a, b) => means[b] - means[a]);\r\n      asdfasdf.push({\r\n        key,\r\n        sorted: sortedObjScens,\r\n        mean: d3.mean(ids.map((id) => flattenedData[id].deliveries).flat()),\r\n      });\r\n    }\r\n\r\n    const sortedObjScens = asdfasdf.sort((a, b) => b.mean - a.mean);\r\n\r\n    orderedDataGroupings[criteria] = {};\r\n\r\n    for (let i = 0; i < sortedObjScens.length; i++) {\r\n      const { key, sorted } = sortedObjScens[i];\r\n      const IDtoRank = {};\r\n\r\n      for (let j = 0; j < sorted.length; j++) {\r\n        IDtoRank[sorted[j]] = j;\r\n      }\r\n      orderedDataGroupings[criteria][key] = IDtoRank;\r\n      orderedDataGroupings[criteria][key].rank = i;\r\n    }\r\n  }\r\n\r\n  return [flattenedData, orderedDataGroupings];\r\n})();\r\n","export const LOD_1_LEVELS = 5;\r\nexport const LOD_1_SMALL_DROP_PAD_FACTOR = 3;\r\n\r\nexport const LOD_2_LEVELS = 5;\r\nexport const LOD_2_RAD_PX = 1;\r\nexport const LOD_2_MIN_LEV_VAL = 0.1;\r\nexport const LOD_2_SMALL_DROP_PAD_FACTOR = 1.3;\r\nexport const LOD_2_LARGE_DROP_PAD_FACTOR = 1.2;\r\n\r\nexport const GROUP_HOVER_AREA_FACTOR = 1.1 / (1 + Math.SQRT1_2);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\n\r\nimport {\r\n  WaterdropMesh,\r\n  WaterdropSimplifiedMesh,\r\n  Camera,\r\n} from \"utils/render-utils\";\r\n\r\nconst scene = (function getScene() {\r\n  const s = new THREE.Scene();\r\n  s.background = new THREE.Color(0xefefef);\r\n  return s;\r\n})();\r\n\r\nconst dropsMesh = new WaterdropMesh();\r\nconst pointsMesh = new WaterdropSimplifiedMesh();\r\n\r\nconst camera = new Camera({\r\n  fov: 45,\r\n  near: 1,\r\n  far: 3000,\r\n});\r\n\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\nexport { scene, camera, renderer, dropsMesh, pointsMesh };\r\n","import { ticksExact } from \"bucket-lib/utils\";\r\nimport {\r\n  LOD_2_LARGE_DROP_PAD_FACTOR,\r\n  LOD_2_LEVELS,\r\n  LOD_2_MIN_LEV_VAL,\r\n  LOD_2_RAD_PX,\r\n  LOD_2_SMALL_DROP_PAD_FACTOR,\r\n} from \"settings\";\r\n\r\nimport {\r\n  DATA_GROUPINGS,\r\n  FLATTENED_DATA,\r\n  MAX_DELIVS,\r\n  OBJECTIVE_IDS,\r\n  SCENARIO_IDS,\r\n} from \"data/objectives-data\";\r\n\r\nimport { calcDomLev, createInterpsFromDelivs } from \"utils/data-utils\";\r\nimport { placeDropsUsingPhysics } from \"utils/math-utils\";\r\nimport { mapBy } from \"utils/misc-utils\";\r\n\r\n// TODO optimize!!\r\nexport function initWaterdrops(grouping) {\r\n  const groupKeys = grouping === \"objective\" ? OBJECTIVE_IDS : SCENARIO_IDS;\r\n  const memberKeys = grouping === \"objective\" ? SCENARIO_IDS : OBJECTIVE_IDS;\r\n\r\n  const amtGroups = groupKeys.length;\r\n  const amtPerGroup = memberKeys.length;\r\n\r\n  const largeDropRad =\r\n    Math.sqrt(amtPerGroup / Math.PI) *\r\n    LOD_2_RAD_PX *\r\n    2 *\r\n    LOD_2_SMALL_DROP_PAD_FACTOR *\r\n    LOD_2_LARGE_DROP_PAD_FACTOR;\r\n  const smallDropRad = LOD_2_RAD_PX * LOD_2_SMALL_DROP_PAD_FACTOR;\r\n\r\n  const largeNodesPhys = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    groupKeys.map((p, idx) => ({\r\n      r: largeDropRad,\r\n      id: idx,\r\n    }))\r\n  );\r\n\r\n  const largeNodesPos = mapBy(largeNodesPhys, ({ id }) => id);\r\n\r\n  const smallNodesPhys = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    memberKeys.map((s, idx) => ({\r\n      r: smallDropRad,\r\n      id: idx,\r\n    }))\r\n  );\r\n\r\n  const smallNodesPos = mapBy(smallNodesPhys, ({ id }) => id);\r\n\r\n  const nodes = [];\r\n  const groupNodes = [];\r\n\r\n  const groupToNodes = {};\r\n\r\n  let idx = 0;\r\n\r\n  for (const nodeData of FLATTENED_DATA) {\r\n    const { id, objective, scenario, deliveries } = nodeData;\r\n\r\n    const i = createInterpsFromDelivs(deliveries, MAX_DELIVS);\r\n    const wds = ticksExact(0, 1, LOD_2_LEVELS + 1).map((d) => i(d));\r\n\r\n    const levs = wds.map(\r\n      (w, i) => Math.max(w, i == 0 ? LOD_2_MIN_LEV_VAL : 0) * LOD_2_RAD_PX\r\n    );\r\n\r\n    const groupID = grouping === \"objective\" ? objective : scenario;\r\n    const memberID = grouping === \"objective\" ? scenario : objective;\r\n\r\n    const groupRank = DATA_GROUPINGS[grouping][groupID].rank;\r\n    const memberRank = DATA_GROUPINGS[grouping][groupID][id];\r\n\r\n    const node = {\r\n      id,\r\n      levs,\r\n      maxLev: LOD_2_RAD_PX,\r\n      domLev: calcDomLev(levs),\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 100 + 400,\r\n      x: smallNodesPos[memberRank].x,\r\n      y: smallNodesPos[memberRank].y,\r\n      group: groupID,\r\n      key: memberID,\r\n      globalX: largeNodesPos[groupRank].x + smallNodesPos[memberRank].x,\r\n      globalY: largeNodesPos[groupRank].y + smallNodesPos[memberRank].y,\r\n    };\r\n\r\n    nodes.push(node);\r\n\r\n    if (!groupToNodes[groupID]) groupToNodes[groupID] = [];\r\n\r\n    groupToNodes[groupID].push(node);\r\n  }\r\n\r\n  for (const groupKey of groupKeys) {\r\n    groupNodes.push({\r\n      x: largeNodesPos[DATA_GROUPINGS[grouping][groupKey].rank].x,\r\n      y: largeNodesPos[DATA_GROUPINGS[grouping][groupKey].rank].y,\r\n      tilt: Math.random() * 50 - 25,\r\n      key: groupKey,\r\n      height: smallNodesPhys.height,\r\n      nodes: groupToNodes[groupKey],\r\n    });\r\n  }\r\n\r\n  return {\r\n    nodes: nodes,\r\n    groups: groupNodes,\r\n    height: largeNodesPhys.height,\r\n  };\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\n\r\nimport { SCENARIO_KEY_STRING, DELIV_KEY_STRING } from \"data/objectives-data\";\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function createInterpsFromDelivs(delivs, maxDelivs) {\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\n// TODO fix colors\r\nexport function calcDomLev(levs) {\r\n  levs = [1, ...levs, 0];\r\n\r\n  let mean = 0;\r\n  for (let i = 0; i < levs.length - 1; i++) {\r\n    const dif = levs[i] - levs[i + 1];\r\n    mean += (dif * (i - 1)) / (levs.length + 4);\r\n  }\r\n\r\n  return mean;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { CIRC_RAD, DROP_HEIGHT } from \"./render-utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return clamp(\r\n    (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326,\r\n    0,\r\n    1\r\n  );\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport function interp(x, a, b) {\r\n  return x * (b - a) + a;\r\n}\r\n\r\nexport function revInterp(t, a, b) {\r\n  return (t - a) / (b - a);\r\n}\r\n","// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    if (typeof v === \"function\")\r\n      _setState((curVal) => (stateRef.current = v(curVal)));\r\n    else _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n\r\nexport function isState(stateInfo, stateName) {\r\n  return stateInfo && stateInfo.state === stateName;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { interpolateWatercolorBlue } from \"bucket-lib/utils\";\r\nimport { LOD_2_RAD_PX } from \"settings\";\r\nimport { LOD_2_LEVELS } from \"settings\";\r\nimport { sortBy } from \"./misc-utils\";\r\nimport { toRadians } from \"./math-utils\";\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport const CIRC_RAD = Math.SQRT1_2;\r\nexport const DROP_RAD = 1;\r\nexport const CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nexport const DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return {\r\n    x: (mouseX / width) * 2 - 1,\r\n    y: -(mouseY / height) * 2 + 1,\r\n  };\r\n}\r\n\r\nclass MeshGeometry {\r\n  threeGeom = new THREE.BufferGeometry();\r\n  triangleIdx = 0;\r\n  positionAttribute;\r\n  colorAttribute;\r\n\r\n  constructor(numPoints, color = true) {\r\n    this.threeGeom.setAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(numPoints * 3), 3)\r\n    );\r\n\r\n    if (color)\r\n      this.threeGeom.setAttribute(\r\n        \"color\",\r\n        new THREE.BufferAttribute(new Float32Array(numPoints * 3), 3)\r\n      );\r\n\r\n    this.positionAttribute = this.threeGeom.getAttribute(\"position\");\r\n    this.colorAttribute = this.threeGeom.getAttribute(\"color\");\r\n  }\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      this.positionAttribute.setXYZ(\r\n        this.triangleIdx * 3 + 0,\r\n        transform.x + v1[0],\r\n        transform.y - v1[1],\r\n        z\r\n      );\r\n\r\n      this.positionAttribute.setXYZ(\r\n        this.triangleIdx * 3 + 1,\r\n        transform.x + v2[0],\r\n        transform.y - v2[1],\r\n        z\r\n      );\r\n\r\n      this.positionAttribute.setXYZ(\r\n        this.triangleIdx * 3 + 2,\r\n        transform.x + v3[0],\r\n        transform.y - v3[1],\r\n        z\r\n      );\r\n\r\n      if (color) {\r\n        this.colorAttribute.setXYZ(\r\n          this.triangleIdx * 3 + 0,\r\n          color.r,\r\n          color.g,\r\n          color.b\r\n        );\r\n        this.colorAttribute.setXYZ(\r\n          this.triangleIdx * 3 + 1,\r\n          color.r,\r\n          color.g,\r\n          color.b\r\n        );\r\n        this.colorAttribute.setXYZ(\r\n          this.triangleIdx * 3 + 2,\r\n          color.r,\r\n          color.g,\r\n          color.b\r\n        );\r\n      }\r\n\r\n      this.triangleIdx++;\r\n    }\r\n  }\r\n\r\n  finish() {\r\n    this.threeGeom.setDrawRange(0, this.triangleIdx * 3);\r\n  }\r\n}\r\n\r\nexport class WaterdropMesh {\r\n  static MAX_POINTS_DROPS = 60 * 13e4; // approx num verts per droplet * approx num droplets on screen\r\n  static MAX_POINTS_OUTLINE = 40 * 13e4; // approx num verts per droplet * approx num droplets on screen\r\n\r\n  dropsMesh;\r\n  outlineMesh;\r\n\r\n  added = false;\r\n\r\n  createMesh(waterdrops) {\r\n    if (!this.dropsMesh) {\r\n      this.initializeMeshes(waterdrops);\r\n    } else {\r\n      this.updateMeshes(waterdrops);\r\n    }\r\n  }\r\n\r\n  draw(scene) {\r\n    if (!this.added) {\r\n      scene.add(this.dropsMesh);\r\n      scene.add(this.outlineMesh);\r\n      this.added = true;\r\n    }\r\n  }\r\n\r\n  remove(scene) {\r\n    if (this.added) {\r\n      scene.remove(this.dropsMesh);\r\n      scene.remove(this.outlineMesh);\r\n      this.added = false;\r\n    }\r\n  }\r\n\r\n  initializeMeshes(waterdrops) {\r\n    const dropsGeometry = new MeshGeometry(WaterdropMesh.MAX_POINTS_DROPS);\r\n    const outlinePoints = [];\r\n\r\n    const outlineMeshCoords = waterdropDeltaOutline(\r\n      0,\r\n      1,\r\n      LOD_2_RAD_PX * 2 * 0.975\r\n    );\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: x, globalY: y, levs, maxLev } = waterdrops.nodes[i];\r\n\r\n      for (let k = levs.length - 1; k >= 0; k--) {\r\n        const l1 = k !== levs.length - 1 ? levs[k + 1] : 0;\r\n        const l2 = levs[k];\r\n\r\n        const meshCoords = waterdropDelta(\r\n          l1 / maxLev,\r\n          l2 / maxLev,\r\n          LOD_2_RAD_PX * 2\r\n        );\r\n        const color = new THREE.Color(\r\n          interpolateWatercolorBlue(k / LOD_2_LEVELS)\r\n        );\r\n\r\n        dropsGeometry.addMeshCoords(\r\n          meshCoords,\r\n          { x: x, y: -y },\r\n          color,\r\n          (i % 5) / 50 + 0.02\r\n        );\r\n      }\r\n\r\n      outlinePoints.push(\r\n        ...outlineMeshCoords.map(\r\n          ([dx, dy]) => new THREE.Vector3(x + dx, -y - dy, (i % 5) / 50 + 0.01)\r\n        )\r\n      );\r\n    }\r\n\r\n    dropsGeometry.finish();\r\n\r\n    this.dropsMesh = new THREE.Mesh(\r\n      dropsGeometry.threeGeom,\r\n      new THREE.MeshBasicMaterial({\r\n        vertexColors: true,\r\n        transparent: true,\r\n        opacity: 1,\r\n      })\r\n    );\r\n\r\n    this.outlineMesh = new THREE.LineSegments(\r\n      new THREE.BufferGeometry().setFromPoints(outlinePoints),\r\n      new THREE.LineBasicMaterial({\r\n        color: 0xcccccc,\r\n        transparent: true,\r\n        opacity: 0,\r\n      })\r\n    );\r\n  }\r\n\r\n  updateOutlineVisibility(opac) {\r\n    if (!this.outlineMesh) return;\r\n    this.outlineMesh.material.opacity = opac;\r\n    this.outlineMesh.material.needsUpdate = true;\r\n  }\r\n\r\n  updateVisibility(opac) {\r\n    if (!this.outlineMesh || !this.dropsMesh) return;\r\n    this.outlineMesh.material.opacity = opac;\r\n    this.outlineMesh.material.needsUpdate = true;\r\n    this.dropsMesh.material.opacity = opac;\r\n    this.dropsMesh.material.needsUpdate = true;\r\n  }\r\n\r\n  updateMeshes(waterdrops) {\r\n    // TODO fix\r\n  }\r\n}\r\n\r\nexport class WaterdropSimplifiedMesh {\r\n  mesh;\r\n  added = false;\r\n\r\n  vertToId = {};\r\n  idToVert = {};\r\n\r\n  draw(scene) {\r\n    if (!this.added) {\r\n      scene.add(this.mesh);\r\n      this.added = true;\r\n    }\r\n  }\r\n\r\n  remove(scene) {\r\n    if (this.added) {\r\n      scene.remove(this.mesh);\r\n      this.added = false;\r\n    }\r\n  }\r\n\r\n  createMesh(waterdrops) {\r\n    if (!this.mesh) {\r\n      this.initializeMesh(waterdrops);\r\n    }\r\n\r\n    this.updateMesh(waterdrops);\r\n\r\n    return this.mesh;\r\n  }\r\n\r\n  initializeMesh(waterdrops) {\r\n    const pointsGeometry = new THREE.BufferGeometry();\r\n\r\n    const vertices = [];\r\n    const colors = [];\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: x, globalY: y, levs, domLev } = waterdrops.nodes[i];\r\n\r\n      const color = domLev > 0 ? interpolateWatercolorBlue(domLev) : \"white\";\r\n\r\n      vertices.push(x, -y, 0);\r\n      const t_color = new THREE.Color(color);\r\n      colors.push(t_color.r, t_color.g, t_color.b);\r\n\r\n      this.vertToId[i] = id;\r\n      this.idToVert[id] = i;\r\n    }\r\n\r\n    const pointsMaterial = new THREE.PointsMaterial({\r\n      size: LOD_2_RAD_PX * 2,\r\n      sizeAttenuation: true,\r\n      vertexColors: true,\r\n      map: new THREE.TextureLoader().load(\"drop.png\"),\r\n      transparent: true,\r\n    });\r\n\r\n    pointsGeometry.setAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(vertices), 3)\r\n    );\r\n\r\n    pointsGeometry.setAttribute(\r\n      \"color\",\r\n      new THREE.BufferAttribute(new Float32Array(colors), 3)\r\n    );\r\n\r\n    this.mesh = new THREE.Points(pointsGeometry, pointsMaterial);\r\n  }\r\n\r\n  updateMesh(waterdrops) {\r\n    const positionAttr = this.mesh.geometry.getAttribute(\"position\");\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: newX, globalY: newY } = waterdrops.nodes[i];\r\n      const idx = this.idToVert[id];\r\n      positionAttr.setXY(idx, newX, -newY);\r\n    }\r\n    positionAttr.needsUpdate = true;\r\n  }\r\n\r\n  updatePoints(waterdrops, translations, dt) {\r\n    const verts = this.mesh.geometry.vertices;\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id } = waterdrops.nodes[i];\r\n      const idx = this.idToVert[id];\r\n\r\n      const [dx, dy] = translations[id];\r\n\r\n      const x = verts[idx].x;\r\n      const y = verts[idx].y;\r\n\r\n      verts[idx].setX(x + dt * dx);\r\n      verts[idx].setY(y - dt * dy);\r\n    }\r\n\r\n    this.mesh.geometry.verticesNeedUpdate = true;\r\n  }\r\n\r\n  intersectObject(camera, x, y) {\r\n    const intersects = camera.intersectObject(x, y, this.mesh);\r\n\r\n    if (intersects[0]) {\r\n      const intersect = sortBy(intersects, \"distanceToRay\")[0];\r\n      return this.vertToId[intersect.index];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  raycaster = new THREE.Raycaster();\r\n\r\n  _svgElement;\r\n\r\n  constructor({ fov, near, far }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n  }\r\n\r\n  setZoomFn(zoomFn) {\r\n    this.zoom = d3.zoom().on(\"zoom\", (e) => {\r\n      this.curTransform = e.transform;\r\n\r\n      this._THREEZoomHandler(e.transform);\r\n      d3.select(this._svgElement).attr(\"transform\", e.transform);\r\n\r\n      zoomFn && zoomFn(e.transform);\r\n    });\r\n  }\r\n\r\n  callZoom(transform) {\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity.translate(transform.x, transform.y).scale(transform.k)\r\n    );\r\n  }\r\n\r\n  callZoomFromWorldViewport({ worldX, worldY, farHeight }) {\r\n    const k = this.height / farHeight;\r\n\r\n    const x = -(worldX * k) + this.width / 2;\r\n    const y = worldY * k + this.height / 2;\r\n\r\n    this.callZoom({\r\n      x,\r\n      y,\r\n      k,\r\n    });\r\n  }\r\n\r\n  getZFromFarHeight(farHeight) {\r\n    return (Math.tan(toRadians(90 - this.fov / 2)) * farHeight) / 2;\r\n  }\r\n\r\n  getFarHeightFromZ(z) {\r\n    return Math.tan(toRadians(this.fov) / 2) * z * 2;\r\n  }\r\n\r\n  interpolateZoomCamera([endx, endy, endz]) {\r\n    const i = d3.interpolateZoom(\r\n      [\r\n        this.camera.position.x,\r\n        this.camera.position.y,\r\n        this.height / this.curTransform.k,\r\n      ],\r\n      [endx, -endy, this.getFarHeightFromZ(endz)]\r\n    );\r\n\r\n    const interper = (t) => {\r\n      const [worldX, worldY, farHeight] = i(t);\r\n\r\n      const k = this.height / farHeight;\r\n\r\n      const x = -(worldX * k) + this.width / 2;\r\n      const y = worldY * k + this.height / 2;\r\n\r\n      return {\r\n        x,\r\n        y,\r\n        k,\r\n      };\r\n    };\r\n\r\n    interper.duration = i.duration;\r\n\r\n    return interper;\r\n  }\r\n\r\n  mount(webglElement, svgElement) {\r\n    this.view = d3.select(webglElement);\r\n    this._svgElement = svgElement;\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.zoom = this.zoom.scaleExtent([\r\n      this.getScaleFromZ(this.far),\r\n      this.getScaleFromZ(this.near),\r\n    ]);\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      this.fov,\r\n      width / height,\r\n      this.near,\r\n      this.far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  _THREEZoomHandler(transform) {\r\n    const scale = transform.k;\r\n    const x = -(transform.x - this.width / 2) / scale;\r\n    const y = (transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n\r\n  intersectObject(mouseX, mouseY, mesh) {\r\n    this.raycaster.setFromCamera(\r\n      {\r\n        x: mouseX,\r\n        y: mouseY,\r\n      },\r\n      this.camera\r\n    );\r\n\r\n    return this.raycaster.intersectObject(mesh);\r\n  }\r\n}\r\n","import { AppContext } from \"AppContext\";\r\nimport { interpolateWatercolorBlue } from \"bucket-lib/utils\";\r\nimport * as d3 from \"d3\";\r\nimport React, { act, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { LOD_2_SMALL_DROP_PAD_FACTOR } from \"settings\";\r\nimport { LOD_1_SMALL_DROP_PAD_FACTOR } from \"settings\";\r\nimport { LOD_2_RAD_PX } from \"settings\";\r\nimport { GROUP_HOVER_AREA_FACTOR } from \"settings\";\r\nimport { LOD_1_LEVELS } from \"settings\";\r\nimport { isState } from \"utils/misc-utils\";\r\nimport { DROPLET_SHAPE } from \"utils/render-utils\";\r\n\r\nexport default function CompareView() {\r\n  const {\r\n    state,\r\n    setState,\r\n    setGoBack,\r\n    camera,\r\n    resetCamera,\r\n    activeWaterdrops,\r\n    waterdrops,\r\n  } = useContext(AppContext);\r\n\r\n  const [activeMinidrop, setActiveMinidrop] = useState();\r\n  const groupsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (activeMinidrop) {\r\n      const positions = [];\r\n      for (let i = 0; i < groupsRef.current.groups.length; i++) {\r\n        const group = groupsRef.current.groups[i];\r\n        const groupPos = groupsRef.current.groupPositions[i];\r\n\r\n        const node = group.nodes.find((n) => n.key === activeMinidrop);\r\n\r\n        positions.push([\r\n          (node.x * LOD_1_SMALL_DROP_PAD_FACTOR) / LOD_2_SMALL_DROP_PAD_FACTOR +\r\n            groupPos[0],\r\n          (node.y * LOD_1_SMALL_DROP_PAD_FACTOR) / LOD_2_SMALL_DROP_PAD_FACTOR +\r\n            groupPos[1],\r\n        ]);\r\n      }\r\n\r\n      const lines = [];\r\n\r\n      const height = LOD_2_RAD_PX * 2;\r\n      for (let i = 0; i < positions.length; i++) {\r\n        const from = Array.from(positions[i]),\r\n          to = Array.from(positions[i + 1 == positions.length ? 0 : i + 1]);\r\n\r\n        const len = Math.sqrt((from[0] - to[0]) ** 2 + (from[1] - to[1]) ** 2);\r\n        const normed = [(to[0] - from[0]) / len, (to[1] - from[1]) / len];\r\n\r\n        from[0] += normed[0] * height;\r\n        from[1] += normed[1] * height;\r\n        to[0] -= normed[0] * height;\r\n        to[1] -= normed[1] * height;\r\n\r\n        lines.push([from, to]);\r\n      }\r\n\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\".compCirclet\")\r\n        .data(positions)\r\n        .join(\"circle\")\r\n        .attr(\"class\", \"compCirclet\")\r\n        .attr(\"display\", \"initial\")\r\n        .style(\"pointer-events\", \"none\")\r\n        .attr(\"fill\", \"transparent\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .attr(\"stroke-dasharray\", 3)\r\n        .attr(\"stroke-width\", 3)\r\n        .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n        .attr(\"r\", (height / 2) * 1.2)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"cx\", (d) => d[0])\r\n        .attr(\"cy\", (d) => d[1] - height * 0.08);\r\n\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\".compLines\")\r\n        .data(lines)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"compLines\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .attr(\"stroke-dasharray\", 3)\r\n        .attr(\"opacity\", 0.5)\r\n        .attr(\"stroke-width\", 1)\r\n        .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"d\", (d) => d3.line()(d));\r\n    }\r\n  }, [activeMinidrop]);\r\n\r\n  useEffect(\r\n    function update() {\r\n      if (isState(state, \"CompareView\")) {\r\n        const container = d3.select(\"#mosaic-svg\").select(\".svg-trans\");\r\n\r\n        updateDropsSVG(\r\n          container,\r\n          (groupsRef.current = getWaterdropGroups(\r\n            activeWaterdrops,\r\n            waterdrops,\r\n            state.avgCoord\r\n          )),\r\n          state.transitionDuration / 5,\r\n          {\r\n            onHover: (d) => {\r\n              setActiveMinidrop(d.key);\r\n            },\r\n          }\r\n        );\r\n\r\n        setGoBack(() => () => {\r\n          setState({ state: \"WideView\" });\r\n\r\n          resetCamera();\r\n        });\r\n\r\n        return () => {\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".compLargeDrop\")\r\n            .remove();\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".compCirclet\")\r\n            .remove();\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".compLines\")\r\n            .remove();\r\n          setGoBack(null);\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n}\r\n\r\nfunction getWaterdropGroups(keyArr, waterdrops, center) {\r\n  const groups = waterdrops.groups.filter((g) => keyArr.includes(g.key));\r\n\r\n  const groupPositions = [];\r\n  const rad = groups[0].height;\r\n\r\n  for (let i = 0, n = groups.length; i < n; i++) {\r\n    groupPositions.push([\r\n      center[0] + Math.cos(((Math.PI * 2) / n) * i) * rad,\r\n      center[1] + Math.sin(((Math.PI * 2) / n) * i) * rad,\r\n    ]);\r\n  }\r\n\r\n  return {\r\n    groups,\r\n    groupPositions,\r\n  };\r\n}\r\n\r\nfunction updateDropsSVG(\r\n  container,\r\n  waterdropGroups,\r\n  transitionDelay,\r\n  { onClick, onHover, onUnhover }\r\n) {\r\n  container\r\n    .selectAll(\".compLargeDrop\")\r\n    .data(waterdropGroups.groups)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"compLargeDrop\")\r\n        .each(function ({ nodes }) {\r\n          d3.select(this)\r\n            .selectAll(\".compSmallDrop\")\r\n            .data(nodes)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"compSmallDrop\")\r\n            .each(function ({ levs }) {\r\n              const s = d3.select(this);\r\n              s.append(\"rect\")\r\n                .attr(\"class\", \"bbox\")\r\n                .style(\"visibility\", \"hidden\");\r\n\r\n              const randId = Math.floor(Math.random() * 1e9);\r\n\r\n              const stops = d3\r\n                .select(this)\r\n                .append(\"defs\")\r\n                .append(\"linearGradient\")\r\n                .attr(\"id\", `${randId}`)\r\n                .attr(\"x1\", \"0%\")\r\n                .attr(\"x2\", \"0%\")\r\n                .attr(\"y1\", \"0%\")\r\n                .attr(\"y2\", \"100%\");\r\n              stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n              stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n\r\n              levs.forEach((_, i) => {\r\n                stops\r\n                  .append(\"stop\")\r\n                  .attr(\r\n                    \"stop-color\",\r\n                    interpolateWatercolorBlue(i / LOD_1_LEVELS)\r\n                  );\r\n                stops\r\n                  .append(\"stop\")\r\n                  .attr(\r\n                    \"stop-color\",\r\n                    interpolateWatercolorBlue(i / LOD_1_LEVELS)\r\n                  );\r\n              });\r\n\r\n              s.append(\"path\")\r\n                .attr(\"d\", DROPLET_SHAPE)\r\n                .attr(\"class\", \"outline\")\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"lightgray\")\r\n                .attr(\"stroke-width\", 0.05);\r\n\r\n              s.append(\"path\")\r\n                .attr(\"class\", \"fill\")\r\n                .attr(\"d\", DROPLET_SHAPE)\r\n                .attr(\"fill\", `url(#${randId})`);\r\n            });\r\n        });\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\"transform\", ({ x, y }, i) => `translate(${x}, ${y})`)\r\n    .each(function ({ nodes }) {\r\n      d3.select(this)\r\n        .selectAll(\".compSmallDrop\")\r\n        .data(nodes)\r\n        .attr(\"display\", \"initial\")\r\n        .attr(\r\n          \"transform\",\r\n          ({ tilt, x, y }) => `translate(${x}, ${y}) rotate(${0})`\r\n        )\r\n        .on(\"click\", function (e, d) {\r\n          onClick && onClick(d);\r\n        })\r\n        .on(\"mouseenter\", function (e, d) {\r\n          onHover && onHover(d);\r\n        })\r\n        .on(\"mouseleave\", function (e, d) {\r\n          onUnhover && onUnhover(d);\r\n        })\r\n        .each(function ({ levs, maxLev, key }, i) {\r\n          const s = d3.select(this);\r\n\r\n          s.select(\".outline\").attr(\r\n            \"transform\",\r\n            `scale(${LOD_2_RAD_PX * 0.95})`\r\n          );\r\n          s.select(\".fill\").attr(\"transform\", `scale(${LOD_2_RAD_PX})`);\r\n\r\n          s.selectAll(\"stop\").each(function (_, i) {\r\n            let actI = Math.floor(i / 2);\r\n            const isEnd = i % 2;\r\n\r\n            if (isEnd === 0) actI -= 1;\r\n\r\n            if (actI === -1) {\r\n              d3.select(this).attr(\"offset\", `${0}%`);\r\n            } else if (actI === levs.length) {\r\n              d3.select(this).attr(\"offset\", `100%`);\r\n            } else {\r\n              d3.select(this).attr(\r\n                \"offset\",\r\n                `${(1 - levs[actI] / maxLev) * 100}%`\r\n              );\r\n            }\r\n          });\r\n\r\n          const d = s.select(\".fill\");\r\n\r\n          s.select(\".bbox\")\r\n            .attr(\"x\", d.node().getBBox().x)\r\n            .attr(\"y\", d.node().getBBox().y)\r\n            .attr(\"width\", d.node().getBBox().width)\r\n            .attr(\"height\", d.node().getBBox().height);\r\n        })\r\n        .transition()\r\n        .delay(transitionDelay)\r\n        .duration(1000)\r\n        .attr(\r\n          \"transform\",\r\n          ({ tilt, x, y }) =>\r\n            `translate(${\r\n              (x * LOD_1_SMALL_DROP_PAD_FACTOR) / LOD_2_SMALL_DROP_PAD_FACTOR\r\n            }, ${\r\n              (y * LOD_1_SMALL_DROP_PAD_FACTOR) / LOD_2_SMALL_DROP_PAD_FACTOR\r\n            }) rotate(${0})`\r\n        );\r\n    })\r\n    .transition()\r\n    .delay(transitionDelay)\r\n    .duration(1000)\r\n    .attr(\r\n      \"transform\",\r\n      (_, i) =>\r\n        `translate(${waterdropGroups.groupPositions[i][0]}, ${waterdropGroups.groupPositions[i][1]})`\r\n    );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { AppContext } from \"AppContext\";\r\n\r\nimport { isState } from \"utils/misc-utils\";\r\nimport { LOD_1_LEVELS } from \"settings\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"bucket-lib/utils\";\r\nimport { DROPLET_SHAPE } from \"utils/render-utils\";\r\nimport { LOD_2_RAD_PX } from \"settings\";\r\nimport { FLATTENED_DATA } from \"data/objectives-data\";\r\nimport { LOD_1_SMALL_DROP_PAD_FACTOR } from \"settings\";\r\nimport { LOD_2_SMALL_DROP_PAD_FACTOR } from \"settings\";\r\n\r\nexport default function ExamineView() {\r\n  const {\r\n    state,\r\n    setState,\r\n    setGoBack,\r\n    camera,\r\n    resetCamera,\r\n    activeWaterdrops,\r\n    waterdrops,\r\n  } = useContext(AppContext);\r\n\r\n  useEffect(function init() {\r\n    // do this now so it won't lag later\r\n    // TODO fix\r\n    // updateSmallDropSVG(\r\n    //   d3.select(\"#mosaic-svg\").select(\".svg-trans\"),\r\n    //   getWaterdrops(\r\n    //     waterdrops.groups[0].nodes.map((n) => n.id),\r\n    //     waterdrops.nodes\r\n    //   ),\r\n    //   0\r\n    // );\r\n  }, []);\r\n\r\n  useEffect(\r\n    function update() {\r\n      if (isState(state, \"ExamineView\")) {\r\n        const transitionDelay = state.transitionDuration;\r\n        const container = d3.select(\"#mosaic-svg\").select(\".svg-trans\");\r\n\r\n        updateSmallDropSVG(\r\n          container,\r\n          getWaterdrops(\r\n            waterdrops.groups\r\n              .find((g) => g.key === activeWaterdrops[0])\r\n              .nodes.map((n) => n.id),\r\n            waterdrops.nodes\r\n          ),\r\n          transitionDelay / 2,\r\n          {}\r\n        );\r\n\r\n        setGoBack(() => () => {\r\n          setState({ state: \"WideView\" });\r\n\r\n          resetCamera();\r\n        });\r\n\r\n        return () => {\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".smallDrop\")\r\n            .attr(\"display\", \"none\");\r\n          setGoBack(null);\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n\r\nfunction getWaterdrops(nodeArr, waterdrops) {\r\n  const wds = [];\r\n\r\n  for (const nodeID of nodeArr) {\r\n    const { id, deliveries } = FLATTENED_DATA[nodeID];\r\n\r\n    // const i = createInterpsFromDelivs(deliveries, MAX_DELIVS);\r\n    // const ls = ticksExact(0, 1, LOD_1_LEVELS + 1).map((d) => i(d));\r\n\r\n    // const levs = ls.map(\r\n    //   (w, i) => Math.max(w, i == 0 ? LOD_2_MIN_LEV_VAL : 0) * LOD_2_RAD_PX\r\n    // );\r\n\r\n    wds.push({\r\n      ...waterdrops[id],\r\n      // levs,\r\n    });\r\n  }\r\n\r\n  return wds;\r\n}\r\n\r\nfunction updateSmallDropSVG(\r\n  container,\r\n  waterdrops,\r\n  transitionDelay,\r\n  { onClick, onHover, onUnhover }\r\n) {\r\n  container\r\n    .selectAll(\".smallDrop\")\r\n    .data(waterdrops)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"smallDrop\")\r\n        .each(function ({ levs }, i) {\r\n          // TODO replace with tooltip, remove unnec svg\r\n\r\n          const s = d3.select(this);\r\n          s.append(\"rect\").attr(\"class\", \"bbox\").style(\"visibility\", \"hidden\");\r\n\r\n          const stops = d3\r\n            .select(this)\r\n            .append(\"defs\")\r\n            .append(\"linearGradient\")\r\n            .attr(\"id\", `drop-fill-${i}`)\r\n            .attr(\"x1\", \"0%\")\r\n            .attr(\"x2\", \"0%\")\r\n            .attr(\"y1\", \"0%\")\r\n            .attr(\"y2\", \"100%\");\r\n          stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n          stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n\r\n          levs.forEach((_, i) => {\r\n            stops\r\n              .append(\"stop\")\r\n              .attr(\"stop-color\", interpolateWatercolorBlue(i / LOD_1_LEVELS));\r\n            stops\r\n              .append(\"stop\")\r\n              .attr(\"stop-color\", interpolateWatercolorBlue(i / LOD_1_LEVELS));\r\n          });\r\n\r\n          s.append(\"path\")\r\n            .attr(\"d\", DROPLET_SHAPE)\r\n            .attr(\"class\", \"outline\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"lightgray\")\r\n            .attr(\"stroke-width\", 0.05);\r\n\r\n          s.append(\"path\")\r\n            .attr(\"class\", \"fill\")\r\n            .attr(\"d\", DROPLET_SHAPE)\r\n            .attr(\"fill\", `url(#drop-fill-${i})`);\r\n\r\n          s.append(\"g\")\r\n            .attr(\"class\", \"circlet\")\r\n            .append(\"circle\")\r\n            .attr(\"fill\", \"transparent\")\r\n            .attr(\"stroke\", \"transparent\")\r\n            .attr(\"stroke-dasharray\", 3)\r\n            .attr(\"stroke-width\", 3)\r\n            .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n            .attr(\"r\", 1.5);\r\n        });\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\r\n      \"transform\",\r\n      ({ globalX, globalY, tilt, x, y }) =>\r\n        `translate(${globalX}, ${globalY}) rotate(${0})`\r\n    )\r\n    .each(function ({ levs, maxLev, key }, i) {\r\n      const s = d3.select(this);\r\n\r\n      s.select(\".outline\").attr(\"transform\", `scale(${LOD_2_RAD_PX * 0.95})`);\r\n      s.select(\".fill\").attr(\"transform\", `scale(${LOD_2_RAD_PX})`);\r\n\r\n      s.select(\".circlet\")\r\n        .attr(\"class\", null)\r\n        .attr(\"class\", \"circlet \" + key);\r\n\r\n      s.selectAll(\"stop\").each(function (_, i) {\r\n        let actI = Math.floor(i / 2);\r\n        const isEnd = i % 2;\r\n\r\n        if (isEnd === 0) actI -= 1;\r\n\r\n        if (actI === -1) {\r\n          d3.select(this).attr(\"offset\", `${0}%`);\r\n        } else if (actI === levs.length) {\r\n          d3.select(this).attr(\"offset\", `100%`);\r\n        } else {\r\n          d3.select(this).attr(\"offset\", `${(1 - levs[actI] / maxLev) * 100}%`);\r\n        }\r\n      });\r\n\r\n      const d = s.select(\".fill\");\r\n\r\n      s.select(\".bbox\")\r\n        .attr(\"x\", d.node().getBBox().x)\r\n        .attr(\"y\", d.node().getBBox().y)\r\n        .attr(\"width\", d.node().getBBox().width)\r\n        .attr(\"height\", d.node().getBBox().height);\r\n    })\r\n    .on(\"click\", function (e, d) {\r\n      onClick && onClick(d);\r\n    })\r\n    .on(\"mouseenter\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"orange\");\r\n      onHover && onHover(d);\r\n    })\r\n    .on(\"mouseleave\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"transparent\");\r\n      onUnhover && onUnhover(d);\r\n    })\r\n    .transition()\r\n    .delay(transitionDelay)\r\n    .duration(1000)\r\n    .attr(\r\n      \"transform\",\r\n      ({ globalX, globalY, tilt, x, y }) =>\r\n        `translate(${\r\n          globalX +\r\n          x * (LOD_1_SMALL_DROP_PAD_FACTOR / LOD_2_SMALL_DROP_PAD_FACTOR - 1)\r\n        }, ${\r\n          globalY +\r\n          y * (LOD_1_SMALL_DROP_PAD_FACTOR / LOD_2_SMALL_DROP_PAD_FACTOR - 1)\r\n        }) rotate(${0})`\r\n    );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { AppContext } from \"AppContext\";\r\n\r\nimport { GROUP_HOVER_AREA_FACTOR } from \"settings\";\r\nimport { camera, dropsMesh, pointsMesh, scene } from \"three-resources\";\r\nimport { isState, useStateRef } from \"utils/misc-utils\";\r\nimport { BiCross, BiNetworkChart } from \"react-icons/bi\";\r\nimport { DESCRIPTIONS_DATA } from \"data/descriptions-data\";\r\n\r\nconst wrap = (s) => s.replace(/(?![^\\n]{1,15}$)([^\\n]{1,15})\\s/g, \"$1\\n\");\r\n\r\nexport default function WideView() {\r\n  const {\r\n    waterdrops,\r\n    state,\r\n    setState,\r\n    camera,\r\n    zoomTo,\r\n    setActiveWaterdrops,\r\n    activeWaterdrops,\r\n    setDisableCamAdjustments,\r\n    getOutlineOpac,\r\n    addZoomHandler,\r\n  } = useContext(AppContext);\r\n\r\n  const [activeWDObjs, setActiveWDObjs] = useState([]);\r\n  const [enableZoom, setEnableZoom, enableZoomRef] = useStateRef(false);\r\n\r\n  const mousePos = useRef();\r\n  const curK = useRef(1);\r\n\r\n  useEffect(() => {\r\n    let lastK = 0;\r\n    addZoomHandler(function (transform) {\r\n      curK.current = transform.k;\r\n\r\n      if (!enableZoomRef.current) return;\r\n\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\"text\")\r\n        .each(function (d) {\r\n          const s = d3.select(this);\r\n          const tNode = s.node();\r\n\r\n          const posx =\r\n              tNode.getBoundingClientRect().left +\r\n              tNode.getBoundingClientRect().width / 2,\r\n            posy =\r\n              tNode.getBoundingClientRect().top +\r\n              tNode.getBoundingClientRect().height / 2;\r\n\r\n          const dist =\r\n            distSq([posx, posy], mousePos.current) / curK.current ** 2;\r\n          const width =\r\n              ((tNode.getBBox().width * camera.height) / camera.far) * 8,\r\n            height =\r\n              ((tNode.getBBox().height * camera.height) / camera.far) * 10;\r\n\r\n          s.attr(\r\n            \"font-size\",\r\n            ((dist > 75 ** 2 ? 0 : fontSize(dist)) / curK.current) * 3\r\n          );\r\n\r\n          d3.select(this.parentNode.parentNode)\r\n            .select(\"image\")\r\n            .attr(\"x\", -width / 2)\r\n            .attr(\"y\", -height / 2)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n        });\r\n    });\r\n\r\n    const distSq = ([x1, y1], [x2, y2]) => (x2 - x1) ** 2 + (y2 - y1) ** 2;\r\n    const fontSize = d3\r\n      .scaleLinear()\r\n      .domain([75 ** 2, 10 ** 2])\r\n      .range([0.1, 0.2])\r\n      .clamp(true);\r\n\r\n    const mouseListener = (e) => {\r\n      mousePos.current = [e.x, e.y];\r\n\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\"text\")\r\n        .each(function (d) {\r\n          const s = d3.select(this);\r\n          const tNode = s.node();\r\n\r\n          const posx =\r\n              tNode.getBoundingClientRect().left +\r\n              tNode.getBoundingClientRect().width / 2,\r\n            posy =\r\n              tNode.getBoundingClientRect().top +\r\n              tNode.getBoundingClientRect().height / 2;\r\n\r\n          const dist =\r\n            distSq([posx, posy], mousePos.current) / curK.current ** 2;\r\n          const width =\r\n              ((tNode.getBBox().width * camera.height) / camera.far) * 8,\r\n            height =\r\n              ((tNode.getBBox().height * camera.height) / camera.far) * 10;\r\n\r\n          s.attr(\r\n            \"font-size\",\r\n            ((dist > 75 ** 2 ? 0 : fontSize(dist)) / curK.current) * 3\r\n          );\r\n\r\n          d3.select(this.parentNode.parentNode)\r\n            .select(\"image\")\r\n            .attr(\"x\", -width / 2)\r\n            .attr(\"y\", -height / 2)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n        });\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", mouseListener);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener(\"mousemove\", mouseListener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(\r\n    function update() {\r\n      if (isState(state, \"WideView\")) {\r\n        setEnableZoom(true);\r\n        const { transitionDuration = 2e3 } = state;\r\n        console.time(\"drawing\");\r\n        dropsMesh.draw(scene);\r\n        console.timeEnd(\"drawing\");\r\n\r\n        const origOpac = getOutlineOpac(camera.curTransform.k);\r\n\r\n        dropsMesh.updateVisibility(1);\r\n        dropsMesh.updateOutlineVisibility(origOpac);\r\n\r\n        const t = d3.timer((elapsed) => {\r\n          const et = Math.min(1, elapsed / (transitionDuration / 2));\r\n\r\n          // dropsMesh.updateVisibility(origOpac * et);\r\n\r\n          if (et >= 1) {\r\n            t.stop();\r\n          }\r\n        });\r\n\r\n        const container = d3.select(\"#mosaic-svg\").select(\".svg-trans\");\r\n\r\n        updateLargeDropSVG(container, waterdrops, {\r\n          onClick: (d) => {\r\n            setActiveWDObjs((wd) => {\r\n              const found = wd.findIndex((wd) => wd.key === d.key);\r\n              if (found !== -1) {\r\n                wd.splice(found, 1);\r\n              } else {\r\n                wd.push(d);\r\n              }\r\n              return [...wd];\r\n            });\r\n\r\n            setActiveWaterdrops((wd) => {\r\n              if (wd.includes(d.key)) {\r\n                wd.splice(wd.indexOf(d.key), 1);\r\n                container.select(\".circlet.\" + d.key).classed(\"active\", false);\r\n              } else {\r\n                wd.push(d.key);\r\n                container.select(\".circlet.\" + d.key).classed(\"active\", true);\r\n              }\r\n              return [...wd];\r\n            });\r\n          },\r\n        });\r\n\r\n        for (const wd of activeWDObjs) {\r\n          container.select(\".circlet.\" + wd.key).classed(\"active\", true);\r\n        }\r\n\r\n        return () => {\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".largeDrop\")\r\n            .attr(\"display\", \"none\");\r\n          setEnableZoom(false);\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (activeWDObjs.length == 1) {\r\n      const d = activeWDObjs[0];\r\n\r\n      const { start, duration } = zoomTo(\r\n        [d.x, d.y - d.height * 0.08, camera.getZFromFarHeight(d.height * 2)],\r\n        () => {\r\n          setDisableCamAdjustments(false);\r\n        }\r\n      );\r\n\r\n      start();\r\n\r\n      setState({ state: \"ExamineView\", transitionDuration: duration });\r\n\r\n      const origOpac = getOutlineOpac(camera.curTransform.k);\r\n      setDisableCamAdjustments(true);\r\n\r\n      const t = d3.timer((elapsed) => {\r\n        const et = Math.min(1, elapsed / (duration / 2));\r\n\r\n        dropsMesh.updateVisibility(1 - et);\r\n        dropsMesh.updateOutlineVisibility(origOpac * (1 - et));\r\n\r\n        if (et >= 1) {\r\n          t.stop();\r\n          dropsMesh.remove(scene);\r\n        }\r\n      });\r\n    } else if (activeWDObjs.length > 1) {\r\n      const coords = activeWDObjs.map((w) => [w.x, w.y]);\r\n      const avgCoord = [\r\n        d3.mean(coords, (c) => c[0]),\r\n        d3.mean(coords, (c) => c[1]),\r\n      ];\r\n      const { start, duration } = zoomTo(\r\n        [\r\n          avgCoord[0],\r\n          avgCoord[1],\r\n          camera.getZFromFarHeight(waterdrops.groups[0].height * 2 * 2),\r\n        ],\r\n        () => {\r\n          setDisableCamAdjustments(false);\r\n        }\r\n      );\r\n\r\n      start();\r\n\r\n      setState({\r\n        state: \"CompareView\",\r\n        transitionDuration: duration,\r\n        avgCoord,\r\n      });\r\n\r\n      const origOpac = getOutlineOpac(camera.curTransform.k);\r\n      setDisableCamAdjustments(true);\r\n\r\n      const t = d3.timer((elapsed) => {\r\n        const et = Math.min(1, elapsed / (duration / 5));\r\n\r\n        dropsMesh.updateVisibility(1 - et);\r\n        dropsMesh.updateOutlineVisibility(origOpac * (1 - et));\r\n\r\n        if (et >= 1) {\r\n          t.stop();\r\n\r\n          dropsMesh.remove(scene);\r\n        }\r\n      });\r\n    }\r\n  }, [activeWDObjs]);\r\n\r\n  if (isState(state, \"WideView\") && activeWaterdrops.length)\r\n    return (\r\n      <button onClick={handleClick} className=\"wide-view-action-btn\">\r\n        {activeWaterdrops.length == 1 ? <BiCross /> : <BiNetworkChart />}\r\n        {activeWaterdrops.length == 1 ? \"examine\" : \"compare\"}\r\n      </button>\r\n    );\r\n}\r\n\r\nfunction updateLargeDropSVG(\r\n  container,\r\n  waterdrops,\r\n  { onClick, onHover, onUnhover }\r\n) {\r\n  console.log(\"updating svg\");\r\n  container\r\n    .selectAll(\".largeDrop\")\r\n    .data(waterdrops.groups)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"largeDrop\")\r\n        .each(function (d) {\r\n          const s = d3.select(this);\r\n\r\n          s.append(\"g\")\r\n            .attr(\"class\", \"circlet\")\r\n            .append(\"circle\")\r\n            .attr(\"fill\", \"transparent\")\r\n            .attr(\"stroke\", \"transparent\")\r\n            .attr(\"stroke-dasharray\", 3)\r\n            .attr(\"stroke-width\", 3)\r\n            .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n            .attr(\"r\", 1);\r\n\r\n          const textGroup = s.append(\"g\");\r\n          textGroup\r\n            .append(\"g\")\r\n            .append(\"image\")\r\n            .attr(\"href\", \"glow.png\")\r\n            .attr(\"preserveAspectRatio\", \"none\")\r\n            .attr(\"opacity\", 0.8);\r\n          textGroup\r\n            .append(\"g\")\r\n            .append(\"text\")\r\n            .attr(\"class\", \"fancy-font\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", 0);\r\n        });\r\n    })\r\n    .each(function (d) {\r\n      d3.select(this)\r\n        .select(\".circlet\")\r\n        .attr(\"class\", null)\r\n        .attr(\"class\", \"circlet \" + d.key);\r\n\r\n      const tNode = d3\r\n        .select(this)\r\n        .select(\"text\")\r\n        .call((s) => {\r\n          s.selectAll(\"*\").remove();\r\n          const lines = wrap(\r\n            DESCRIPTIONS_DATA[d.key].display_name || DESCRIPTIONS_DATA[d.key].id\r\n          ).split(\"\\n\");\r\n\r\n          lines.forEach((line, i) => {\r\n            s.append(\"tspan\")\r\n              .attr(\"x\", 0)\r\n              .attr(\"y\", `${-lines.length / 2 + 0.5}em`)\r\n              .attr(\"dy\", `${i}em`)\r\n              .text(line);\r\n          });\r\n        })\r\n        .node();\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\r\n      \"transform\",\r\n      ({ x, y, height }) =>\r\n        `translate(${x}, ${y - height * 0.08}) scale(${\r\n          height * GROUP_HOVER_AREA_FACTOR\r\n        })`\r\n    )\r\n    .on(\"click\", function (e, d) {\r\n      onClick && onClick(d);\r\n    })\r\n    .on(\"mouseenter\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"orange\");\r\n      onHover && onHover(d);\r\n    })\r\n    .on(\"mouseleave\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"transparent\");\r\n      onUnhover && onUnhover(d);\r\n    });\r\n}\r\n"],"names":["waterdrops","initWaterdrops","appWidth","window","innerWidth","appHeight","innerHeight","App","state","setState","stateRef","useStateRef","zoomCallbacks","setZoomCallbacks","zoomCallbacksRef","activeWaterdrops","setActiveWaterdrops","useState","goBack","setGoBack","disableCamAdjustments","setDisableCamAdjustments","disableCamAdjustmentsRef","getOutlineOpac","useCallback","d3","domain","height","groups","range","clamp","useEffect","document","querySelector","appendChild","renderer","domElement","attr","append","camera","mount","node","select","setZoomFn","transform","current","dropsMesh","updateOutlineVisibility","k","cb","setSize","setAnimationLoop","render","scene","resetCamera","animated","arguments","length","undefined","callback","pos","getZFromFarHeight","start","zoomTo","callZoomFromWorldViewport","worldX","worldY","farHeight","xyz","i","interpolateZoomCamera","duration","t","elapsed","et","Math","min","callZoom","stop","addZoomHandler","cbs","_jsxs","AppContext","Provider","value","pointsMesh","children","className","_jsx","id","WideView","ExamineView","CompareView","onClick","console","time","createMesh","timeEnd","createContext","ticksExact","count","map","interpolateWatercolorBlue","DESCRIPTIONS_DATA","async","objs","fetch","json","log","mapBy","_ref","SCEN_DIVISOR","MAX_DELIVS","SCENARIO_KEY_STRING","DELIV_KEY_STRING","OBJECTIVES_DATA","obj","scen","unord","v","Array","from","sort","a","b","name","_ref2","OBJECTIVE_IDS","Object","keys","SCENARIO_IDS","values","filter","_","FLATTENED_DATA","DATA_GROUPINGS","flattenedData","dataGroupings","objective","scenario","means","idx","push","deliveries","orderedDataGroupings","criteria","asdfasdf","key","ids","sortedObjScens","sorted","mean","flat","IDtoRank","j","rank","LOD_1_LEVELS","LOD_1_SMALL_DROP_PAD_FACTOR","LOD_2_LEVELS","LOD_2_RAD_PX","LOD_2_MIN_LEV_VAL","LOD_2_SMALL_DROP_PAD_FACTOR","LOD_2_LARGE_DROP_PAD_FACTOR","GROUP_HOVER_AREA_FACTOR","SQRT1_2","s","THREE","background","WaterdropMesh","WaterdropSimplifiedMesh","Camera","fov","near","far","antialias","grouping","groupKeys","memberKeys","amtPerGroup","largeDropRad","sqrt","PI","smallDropRad","largeNodesPhys","placeDropsUsingPhysics","p","r","largeNodesPos","smallNodesPhys","smallNodesPos","nodes","groupNodes","groupToNodes","nodeData","createInterpsFromDelivs","levs","d","w","max","groupID","memberID","groupRank","memberRank","maxLev","domLev","calcDomLev","tilt","random","dur","x","y","group","globalX","globalY","groupKey","delivs","maxDelivs","generateWaterdrop","width","rad","delta","outer","cos","sin","SQRT2","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","reuse","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","generateRandoPoints","WIDTH_AREA","AREA","floor","radsToDropWidth","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","_ref3","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","retVal","_ref4","CIRC_RAD","DROP_HEIGHT","toRadians","fn","newObjs","groupBy","sortBy","array","object","path","defaultValue","_object","split","part","get","pick","va","vb","val","_setState","useRef","curVal","isState","stateInfo","stateName","DROPLET_SHAPE","DROP_RAD","CIRC_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","yToSpriteY","spriteYToY","sy","waterdropDelta","yStart","yEnd","size","abs","Y_DELTA","dx1","dy1","dx2","dy2","ceil","v1","v2","v3","v4","MeshGeometry","constructor","numPoints","color","threeGeom","triangleIdx","this","setAttribute","Float32Array","positionAttribute","getAttribute","colorAttribute","addMeshCoords","meshCoords","z","setXYZ","g","finish","setDrawRange","added","updateMeshes","initializeMeshes","draw","outlineMesh","remove","dropsGeometry","MAX_POINTS_DROPS","outlinePoints","outlineMeshCoords","rightCoords","leftCoords","reverse","waterdropDeltaOutline","dx","dy","vertexColors","transparent","opacity","setFromPoints","opac","material","needsUpdate","updateVisibility","MAX_POINTS_OUTLINE","vertToId","idToVert","mesh","initializeMesh","updateMesh","pointsGeometry","colors","t_color","pointsMaterial","sizeAttenuation","load","positionAttr","geometry","newX","newY","setXY","updatePoints","translations","dt","verts","setX","setY","verticesNeedUpdate","intersectObject","intersects","intersect","index","raycaster","zoomFn","zoom","on","e","curTransform","_THREEZoomHandler","_svgElement","view","translate","tan","getFarHeightFromZ","endx","endy","endz","interper","webglElement","svgElement","scaleExtent","getScaleFromZ","set","call","getZFromScale","camera_z_position","half_fov","half_fov_radians","fov_height","mouseX","mouseY","setFromCamera","useContext","activeMinidrop","setActiveMinidrop","groupsRef","positions","groupPos","groupPositions","find","n","lines","to","len","normed","selectAll","data","join","style","transition","container","waterdropGroups","transitionDelay","onHover","onUnhover","enter","each","randId","stops","concat","forEach","_ref5","_ref6","_ref7","actI","getBBox","delay","_ref8","updateDropsSVG","keyArr","center","includes","getWaterdropGroups","avgCoord","transitionDuration","updateSmallDropSVG","getWaterdrops","_Fragment","nodeArr","wds","nodeID","classed","wrap","replace","activeWDObjs","setActiveWDObjs","enableZoom","setEnableZoom","enableZoomRef","mousePos","curK","tNode","posx","getBoundingClientRect","left","posy","top","dist","distSq","fontSize","parentNode","x1","y1","x2","y2","mouseListener","addEventListener","removeEventListener","origOpac","updateLargeDropSVG","wd","found","findIndex","splice","indexOf","handleClick","c","BiCross","BiNetworkChart","textGroup","display_name","line","text"],"sourceRoot":""}