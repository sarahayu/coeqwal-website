{"version":3,"file":"static/js/805.1b35a623.chunk.js","mappings":"8UA+CA,MAAMA,EAAaC,EAAe,aAE5BC,EAAWC,OAAOC,WACtBC,EAAYF,OAAOG,YAUN,SAASC,IACtB,MAAOC,EAAOC,EAAUC,IAAYC,EAAAA,EAAAA,IAAY,CAAC,IAC1CC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,KAClDC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAEnCG,EACAC,EACAC,IACER,EAAAA,EAAAA,KAAY,IAEhBS,EAAAA,EAAAA,YAAU,WACRC,SAASC,cAAc,iBAAiBC,YAAYC,EAAAA,GAASC,YAE7DC,EAAAA,IAAU,eACPC,KAAK,QAASzB,GACdyB,KAAK,SAAUtB,GACfuB,OAAO,KACPD,KAAK,QAAS,aAEjBE,EAAAA,GAAOC,MACLJ,EAAAA,IAAU,oBAAoBK,OAC9BL,EAAAA,IAAU,eAAeM,OAAO,cAAcD,QAEhDF,EAAAA,GAAOI,WAAWC,IACXf,EAAyBgB,SAC5BC,EAAAA,GAAUC,yBAAwBC,EAAAA,EAAAA,IAAeJ,EAAUK,GAC7D,IAEFV,EAAAA,GAAOW,QAAQtC,EAAUG,GAEzBmB,EAAAA,GAASiB,kBAAiB,KACxBjB,EAAAA,GAASkB,OAAOC,EAAAA,GAAOd,EAAAA,GAAOA,OAAO,IAGvCe,GAAY,GACZnC,EAAS,CAAED,MAAO,YACpB,GAAG,IAEH,MAAMoC,GAAcC,EAAAA,EAAAA,cAAY,WAAgC,IAA/BC,IAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAASG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,MAAME,EAAM,CACV,EACqB,KAApBnD,EAAWoD,OACZvB,EAAAA,GAAOwB,kBAAkBrD,EAAWoD,SAEtC,GAAIN,EAAU,CACZ,MAAM,MAAEQ,GAAUC,EAAOJ,EAAKD,GAC9BI,GACF,MACEzB,EAAAA,GAAO2B,0BAA0B,CAC/BC,OAAQN,EAAI,GACZO,QAASP,EAAI,GACbQ,UAAW3D,EAAWoD,SAExBF,GAAYA,GAEhB,GAAG,IAEGK,GAASV,EAAAA,EAAAA,cAAY,CAACe,EAAKV,KAC/B,MAAMW,EAAIhC,EAAAA,GAAOiC,sBAAsBF,GAEjCG,EAAWF,EAAEE,SAAW,EAc9B,MAAO,CACLT,MAbYA,KACZ,MAAMU,EAAItC,EAAAA,KAAUuC,IAClB,MAAMC,EAAKC,KAAKC,IAAIH,EAAUF,EAAU,GACxClC,EAAAA,GAAOwC,SAASR,EAAEK,IAEP,IAAPA,IACFF,EAAEM,OACFpB,GAAYA,IACd,GACA,EAKFa,WACD,GACA,IAEH,OACEQ,EAAAA,EAAAA,MAACC,EAAAA,EAAWC,SAAQ,CAClBC,MAAO,CACLxE,WACAG,YACAG,QACAC,WACAG,mBACAC,sBACAK,2BACAlB,aACA2C,MAAK,KACLd,OAAM,KACNL,SAAQ,KACRmD,WAAU,KACVvC,UAAS,KACTpB,YACAuC,SACAX,eACAgC,SAAA,EAEFL,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kBAAiBD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,OAAKC,GAAG,kBACRD,EAAAA,EAAAA,KAAA,OAAKC,GAAG,mBAEVD,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,KACTF,EAAAA,EAAAA,KAACG,EAAAA,EAAW,KACZH,EAAAA,EAAAA,KAACI,EAAAA,EAAW,IACXnE,IACC+D,EAAAA,EAAAA,KAAA,UAAQD,UAAU,cAAcM,QAASpE,EAAO6D,SAAC,aAMzD,CAGA,SAAS3E,EAAemF,GACtB,MAAMC,EAAyB,cAAbD,EAA2BE,EAAAA,GAAgBC,EAAAA,GACvDC,EAA0B,cAAbJ,EAA2BG,EAAAA,GAAeD,EAAAA,GAGvDG,GADYJ,EAAUrC,OACRwC,EAAWxC,QAEzB0C,EACJvB,KAAKwB,KAAKF,EAActB,KAAKyB,IAC7BC,EAAAA,GACA,EACAC,EAAAA,GACAC,EAAAA,GACIC,EAAeH,EAAAA,GAAeC,EAAAA,GAE9BG,GAAiBC,EAAAA,EAAAA,IACrB,EACA,EACAb,EAAUc,KAAI,CAACC,EAAGC,KAAG,CACnBC,EAAGZ,EACHX,GAAIsB,OAIFE,GAAgBC,EAAAA,EAAAA,IAAMP,GAAgBQ,IAAA,IAAC,GAAE1B,GAAI0B,EAAA,OAAK1B,CAAE,IAEpD2B,GAAiBR,EAAAA,EAAAA,IACrB,EACA,EACAV,EAAWW,KAAI,CAACQ,EAAGN,KAAG,CACpBC,EAAGN,EACHjB,GAAIsB,OAIFO,GAAgBJ,EAAAA,EAAAA,IAAME,GAAgBG,IAAA,IAAC,GAAE9B,GAAI8B,EAAA,OAAK9B,CAAE,IAEpD+B,EAAQ,GACRC,EAAa,GAEbC,EAAe,CAAC,EAItB,IAAK,MAAMC,KAAYC,EAAAA,GAAgB,CACrC,MAAM,GAAEnC,EAAE,UAAEoC,EAAS,SAAEC,EAAQ,WAAEC,GAAeJ,EAE1CpD,GAAIyD,EAAAA,EAAAA,IAAwBD,EAAYE,EAAAA,IAGxCC,GAFMC,EAAAA,EAAAA,IAAW,EAAG,EAAGC,EAAAA,GAAe,GAAGvB,KAAKwB,GAAM9D,EAAE8D,KAE3CxB,KACf,CAACyB,EAAG/D,IAAMM,KAAK0D,IAAID,EAAQ,GAAL/D,EAASiE,EAAAA,GAAoB,GAAKjC,EAAAA,KAGpDkC,EAAuB,cAAb3C,EAA2B+B,EAAYC,EACjDY,EAAwB,cAAb5C,EAA2BgC,EAAWD,EAEjDc,EAAYC,EAAAA,GAAe9C,GAAU2C,GAASI,KAC9CC,EAAaF,EAAAA,GAAe9C,GAAU2C,GAAShD,GAE/ChD,EAAO,CACXgD,KACAyC,OACAa,OAAQxC,EAAAA,GACRyC,QAAQC,EAAAA,EAAAA,IAAWf,GACnBgB,KAAsB,GAAhBrE,KAAKsE,SAAgB,GAC3BC,IAAqB,IAAhBvE,KAAKsE,SAAiB,IAC3BE,EAAG/B,EAAcwB,GAAYO,EAC7BC,EAAGhC,EAAcwB,GAAYQ,EAC7BC,MAAOd,EACPe,IAAKd,EACLe,QAASxC,EAAc0B,GAAWU,EAAI/B,EAAcwB,GAAYO,EAChEK,QAASzC,EAAc0B,GAAWW,EAAIhC,EAAcwB,GAAYQ,GAGlE9B,EAAMmC,KAAKlH,GAENiF,EAAae,KAAUf,EAAae,GAAW,IAEpDf,EAAae,GAASkB,KAAKlH,EAC7B,CAEA,IAAK,MAAMmH,KAAY7D,EACrB0B,EAAWkC,KAAK,CACdN,EAAGpC,EAAc2B,EAAAA,GAAe9C,GAAU8D,GAAUf,MAAMQ,EAC1DC,EAAGrC,EAAc2B,EAAAA,GAAe9C,GAAU8D,GAAUf,MAAMS,EAC1DJ,KAAsB,GAAhBrE,KAAKsE,SAAgB,GAC3BK,IAAKI,EACL9F,OAAQsD,EAAetD,OACvB0D,MAAOE,EAAakC,KAIxB,MAAO,CACLpC,MAAOA,EACPqC,OAAQpC,EACR3D,OAAQ6C,EAAe7C,OAE3B,CAhOA5B,EAAAA,GAASgB,QAAQtC,EAAUG,GAE3B+I,QAAQC,KAAK,uBACbjH,EAAAA,GAAUkH,WAAWtJ,GACrBoJ,QAAQG,QAAQ,uB,qDCtDT,MAAM/E,GAAagF,E,MAAAA,eAAc,CAAC,E,8DCElC,SAAS/B,EAAWnE,EAAOgB,EAAMmF,GACtC,OAAO/H,EAAAA,IAAS+H,GAAOtD,KAAKtC,GAAOA,GAAK4F,EAAQ,IAAOnF,EAAOhB,GAASA,GACzE,CAqFO,MAAMoG,EAA6B7F,GACxCnC,EAAAA,GAAoBA,EAAAA,IAAe,CAAC,GAAK,GAArBA,CAA2BmC,G,4HCvFjD,MAAM8F,EAAe,EAERpC,EAAa,KACbqC,EAAsB,QACtBC,EAAmB,SAEnBC,QAAyBC,iBACpC,MAAMC,cAAoBC,MAAM,0BAA0BC,OAE1D,IAAK,MAAMC,KAAOH,EAAM,CACtBG,EAAIP,GAAuBO,EAAIP,GAC/B,IAAK,MAAMQ,KAAQD,EAAIP,GAAsB,CAE3C,MAAMS,EAAQD,EAAKP,GAAkB1D,KAAKmE,IAAMC,EAAAA,EAAAA,IAAMD,EAAG,EAAG/C,KAE5D6C,EAAKP,GAAoBW,MAAMC,KAAKJ,GAAOK,MAAK,CAACC,EAAGC,IAAMA,EAAID,GAChE,CACAR,EAAIP,IAAuBpD,EAAAA,EAAAA,IACzB2D,EAAIP,IACJnD,IAAA,IAAC,KAAEoE,GAAMpE,EAAA,OAAKoE,CAAI,GAEtB,CAIA,OAFAzB,QAAQ0B,IAAI,kCAELtE,EAAAA,EAAAA,IAAMwD,GAAMnD,IAAA,IAAC,IAAEsD,GAAKtD,EAAA,OAAKsD,CAAG,GACrC,CApBsCJ,GAsBzBzE,EAAgByF,OAAOC,KAAKlB,GAM5BvE,EAJSwF,OAAOC,KAC3BD,OAAOE,OAAOnB,GAAiB,GAAGF,IAGMsB,QACxC,CAACC,EAAGtH,IAAMA,EAAI8F,IAAiB,KAMnBzC,EAAgBgB,GAAmB,WAC/C,MAAMkD,EAAgB,GAChBC,EAAgB,CACpBlE,UAAW,CAAC,EACZC,SAAU,CAAC,GAIPkE,EAAQ,GAEd,IAAIjF,EAAM,EACV,IAAK,MAAM8D,KAAO7E,EAChB,IAAK,MAAM8E,KAAQ7E,EAAc,CAC1B8F,EAAyB,UAAElB,KAC9BkB,EAAyB,UAAElB,GAAO,IAE/BkB,EAAwB,SAAEjB,KAC7BiB,EAAwB,SAAEjB,GAAQ,IAEpCiB,EAAyB,UAAElB,GAAKlB,KAAK5C,GACrCgF,EAAwB,SAAEjB,GAAMnB,KAAK5C,GAErC,MAAMgB,EACJyC,EAAgBK,GAAKP,GAAqBQ,GAAMP,GAElDuB,EAAcnC,KAAK,CACjBlE,GAAIsB,EACJc,UAAWgD,EACX/C,SAAUgD,EACV/C,eAGFiE,EAAMrC,KAAKvH,EAAAA,IAAQ2F,IAEnBhB,GACF,CAGF,MAAMkF,EAAuB,CAAC,EAE9B,IAAK,MAAMC,KAAYT,OAAOC,KAAKK,GAAgB,CACjD,MAAMI,EAAW,GACjB,IAAK,MAAM3C,KAAOiC,OAAOC,KAAKK,EAAcG,IAAY,CACtD,MAAME,EAAML,EAAcG,GAAU1C,GAC9B6C,EAAiBD,EAAIhB,MAAK,CAACC,EAAGC,IAAMU,EAAMV,GAAKU,EAAMX,KAC3Dc,EAASxC,KAAK,CACZH,MACA8C,OAAQD,EACRE,KAAMnK,EAAAA,IAAQgK,EAAIvF,KAAKpB,GAAOqG,EAAcrG,GAAIsC,aAAYyE,SAEhE,CAEA,MAAMH,EAAiBF,EAASf,MAAK,CAACC,EAAGC,IAAMA,EAAEiB,KAAOlB,EAAEkB,OAE1DN,EAAqBC,GAAY,CAAC,EAElC,IAAK,IAAI3H,EAAI,EAAGA,EAAI8H,EAAe3I,OAAQa,IAAK,CAC9C,MAAM,IAAEiF,EAAG,OAAE8C,GAAWD,EAAe9H,GACjCkI,EAAW,CAAC,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAO5I,OAAQgJ,IACjCD,EAASH,EAAOI,IAAMA,EAExBT,EAAqBC,GAAU1C,GAAOiD,EACtCR,EAAqBC,GAAU1C,GAAKX,KAAOtE,CAC7C,CACF,CAEA,MAAO,CAACuH,EAAeG,EACzB,CArEiD,G,+GC9C1C,MAAMU,EAAe,EAEfvE,EAAe,EACf7B,EAAe,EACfiC,EAAoB,GACpBhC,EAA8B,EAC9BC,EAA8B,IAE9BmG,EAA0B,KAAO,EAAI/H,KAAKgI,Q,6GCCvD,MAAMxJ,EAAS,WACb,MAAMgE,EAAI,IAAIyF,EAAAA,IAEd,OADAzF,EAAE0F,WAAa,IAAID,EAAAA,IAAY,UACxBzF,CACT,CAJe,GAMTvE,EAAY,IAAIkK,EAAAA,GAChB3H,EAAa,IAAI4H,EAAAA,GAEjB1K,EAAS,IAAI2K,EAAAA,GAAO,CACxBC,IAAK,GACLC,KAAM,EACNC,IAAK,MAGDnL,EAAW,IAAI4K,EAAAA,IAAoB,CAAEQ,WAAW,IAEhDtK,EAAiBZ,EAAAA,MAEpBmL,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,GAAK,IACZvC,OAAM,E,0GCdF,SAASjD,EAAwByF,EAAQC,GAC9C,OAAOtL,EAAAA,MAEJmL,QAAOpF,EAAAA,EAAAA,IAAW,EAAG,EAAGsF,EAAO/J,SAC/B8J,MAAMC,EAAO5G,KAAKmE,GAAMnG,KAAKC,IAAI,EAAGkG,EAAI0C,MACxCzC,OAAM,EACX,CAGO,SAAShC,EAAWf,GACzBA,EAAO,CAAC,KAAMA,EAAM,GAEpB,IAAIqE,EAAO,EACX,IAAK,IAAIhI,EAAI,EAAGA,EAAI2D,EAAKxE,OAAS,EAAGa,IAAK,CAExCgI,IADYrE,EAAK3D,GAAK2D,EAAK3D,EAAI,KACfA,EAAI,IAAO2D,EAAKxE,OAAS,EAC3C,CAEA,OAAO6I,CACT,C,6IC/BO,SAAStB,EAAM5B,EAAGgC,EAAGC,GAC1B,OAAOzG,KAAK0D,IAAI8C,EAAGxG,KAAKC,IAAIwG,EAAGjC,GACjC,CAEA,SAASsE,EAAkBC,GACzB,MAAMC,EAAMD,EAAQ,EAEdE,EAAmB,EAAVjJ,KAAKyB,GAAU,EADX,GAGbyH,EAAQ,CACZ,CACE1E,EAAGxE,KAAKmJ,IAAe,EAAVnJ,KAAKyB,GAAU,GAAKuH,EACjCvE,EAAGzE,KAAKoJ,IAAe,EAAVpJ,KAAKyB,GAAU,GAAKuH,GAEnC,CACExE,EAAG,EACHC,GAAIzE,KAAKqJ,MAAQL,IAIrB,IAAK,IAAItJ,EAAI,EAAGA,GAdG,GAccA,IAC/BwJ,EAAMpE,KAAK,CACTN,EAAGxE,KAAKmJ,IAAIzJ,EAAIuJ,EAAQjJ,KAAKyB,GAAK,GAAKuH,EACvCvE,EAAGzE,KAAKoJ,IAAI1J,EAAIuJ,EAAQjJ,KAAKyB,GAAK,GAAKuH,IAI3C,OAAOE,CACT,CA+BO,MAAMI,EAAyB,WACpC,MAAMJ,EAAQJ,EAAkB,GAC1BS,EAAQT,EAAkB,GAE1BU,EAAS,GAEf,IAAK,IAAI9J,EAAI,EAAGA,EAAIwJ,EAAMrK,OAAS,EAAGa,IACpC8J,EAAO1E,KAAK,CACVoE,EAAMxJ,GACNwJ,EAAMxJ,GAAKA,EAAI,EAAI,EAAI,IACvB6J,EAAM7J,GAAKA,EAAI,EAAI,EAAI,IACvB6J,EAAM7J,KAIV,OAAO8J,CACT,CAhBsC,GAkBtC,IAAIC,EACAC,EAEAC,EACAC,EAQG,SAAS7H,EAAuByC,EAAGC,EAAG9B,GAAuB,IAAhBkH,EAAKjL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvD,GAAIiL,GAASF,GAAahH,EAAM9D,SAAW+K,EAAiB,OAAOD,EAI9DF,GAAe9G,EAAM9D,SAAW6K,IACnCD,EAAclM,EAAAA,IACL,GACNyE,KAAI,IAnEJ,SAA6B8H,EAAOxE,GACzC,MAAMyE,EAASC,IAAAA,OAAcC,OAAOH,GAE9BI,EAAOH,EAAO9J,IAAIuE,EACtB2F,EAAOJ,EAAOrG,IAAIc,EAClB4F,EAAOL,EAAO9J,IAAIwE,EAClB4F,EAAON,EAAOrG,IAAIe,EAEd6F,EAAO/M,EAAAA,IAAe,CAAC2M,EAAMC,IAC7BI,EAAOhN,EAAAA,IAAe,CAAC6M,EAAMC,IAE7BG,EAAS,GAEf,IAAK,IAAI9K,EAAI,EAAGA,EAAI4F,EAAO5F,IACzB,OAAa,CACX,MAAM8E,EAAI8F,EAAKtK,KAAKsE,UACdG,EAAI8F,EAAKvK,KAAKsE,UAEpB,GAAI0F,IAAAA,SAAgBS,SAASX,EAAO,CAAEtF,IAAGC,MAAM,CAC7C+F,EAAO1F,KAAK,CAACN,EAAGC,IAChB,KACF,CACF,CAGF,OAAO+F,CACT,CA0CQE,CAAoB5B,EAAkB,GAAKY,EAAe/G,EAAM9D,WAGtE,MAAM8L,EAlBD,SAAyBhI,GAC9B,MAAMiI,EAAOrN,EAAAA,IAAOoF,EAAMX,KAAKG,GAAMA,GAAK,EAAI,QAC9C,OAAOnC,KAAK6K,MAAgC,EAAzB7K,KAAKwB,KAAKoJ,EAAO,MAAa,EACnD,CAeqBE,CAAgBnI,EAAMX,KAAIM,IAAA,IAAC,EAAEH,GAAGG,EAAA,OAAKH,CAAC,KAEnD4I,EAActB,EAClBzJ,KAAK6K,MAAM7K,KAAKsE,SAAWmF,EAAY5K,SACvCmD,KAAIU,IAAA,IAAE8B,EAAGC,GAAE/B,EAAA,MAAK,CAAC8B,EAAImG,EAAYlG,EAAIkG,EAAW,IAG5CK,EAAShB,IAAAA,OACbiB,EAASjB,IAAAA,OACTkB,EAAYlB,IAAAA,UAERmB,EAASH,EAAOf,SAEhBmB,EAAUL,EAAYxE,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAE9C6E,EAAc1I,EAAMX,KAAI,CAAAsJ,EAAY5L,KAAO,IAAlB,EAAEyC,EAAC,GAAEvB,GAAI0K,EACtC,MAAOC,EAAIC,GAAMJ,EAAQ1L,GACzB,OAAOuL,EAAOQ,OAAOF,EAAIC,EAAIrJ,EAAG,CAC9BuJ,YAAa,EACb9K,GAAIA,GACJ,IAGE+K,EAAQrC,EAAsBtH,KAAK4J,GACvC5B,IAAAA,KAAYC,OAAO,CACjB4B,SAAU7B,IAAAA,SAAgB8B,OAAOF,GACjCG,SAAUH,EACVI,UAAU,MAIRC,EAAOjC,IAAAA,KAAYC,OAAO,CAC9B+B,UAAU,IAGZhC,IAAAA,KAAYkC,SAASD,EAAMN,GAE3B3B,IAAAA,KAAYmC,UAAUF,EAAM,CAAEzH,EAAG,EAAGC,EAAG,IACvCuF,IAAAA,KAAYoC,MAAMH,EAAMtB,EAAYA,GAEpCO,EAAUmB,IAAIlB,EAAOmB,MAAO,IAAIjB,EAAaY,IAG7C,IAAK,IAAIvM,EAAI,EAAG6M,EAAM,GAAIC,EAAO,GAAK9M,EAAI6M,EAAMC,EAAM9M,IACpDsL,EAAOyB,OAAOtB,EAAQ,IAAOoB,GAE/B,MAAMG,EAASrB,EAAYrJ,KAAI2K,IAAA,IAAC,SAAEd,EAAQ,GAAEjL,GAAI+L,EAAA,MAAM,CACpD/L,KACA4D,EAAGqH,EAASrH,EAAIA,EAChBC,EAAGoH,EAASpH,EAAIA,EACjB,IASD,OAPAiI,EAAOzN,OAAU0L,EAAa,EAAIiC,EAAAA,GAAYC,EAAAA,IAE1ChD,GAAWF,GAAa+C,EAAO7N,SAAW+K,IAC5CD,EAAY+C,EACZ9C,EAAkB8C,EAAO7N,QAGpB6N,CACT,CAWO,SAASI,EAAUtG,GACxB,OAAQA,EAAIxG,KAAKyB,GAAM,GACzB,C,yEClKO,SAASY,EAAMwD,EAAMkH,GAC1B,MAAMC,EAAUpG,OAAOqG,QAAQpH,EAAMkH,GAErC,IAAK,MAAMpI,KAAOiC,OAAOC,KAAKmG,GAC5BA,EAAQrI,GAAOqI,EAAQrI,GAAK,GAG9B,OAAOqI,CACT,CAeO,SAASE,EAAOC,EAAOJ,GAE5B,OADAA,EALF,SAAcA,GACZ,MAAqB,kBAAPA,EAAmB5G,GAVnC,SAAaiH,EAAQC,EAAMC,GAAe,IAADC,EACvC,MAAM5B,EAAQ0B,EAAKG,MAAM,KACzB,IAAK,IAAIC,KAAQ9B,EAAO,CACtB,IAAKyB,EAAQ,OAAOE,EACpBF,EAASA,EAAOK,EAClB,CACA,OAAa,QAAbF,EAAOH,SAAM,IAAAG,EAAAA,EAAID,CACnB,CAGyCI,CAAIvH,EAAG4G,GAAMA,CACtD,CAGOY,CAAKZ,GACHI,EAAM5G,MAAK,CAACC,EAAGC,KACpB,MAAMmH,EAAKb,EAAGvG,GACRqH,EAAKd,EAAGtG,GACd,OAAImH,EAAKC,GAAY,EACjBD,EAAKC,EAAW,EACb,CAAC,GAEZ,CAEO,SAASrR,EAAYsR,GAC1B,MAAOzR,EAAO0R,IAAapR,EAAAA,EAAAA,UAASmR,GAC9BvR,GAAWyR,EAAAA,EAAAA,QAAOF,IAExB7Q,EAAAA,EAAAA,YAAU,KAAYV,EAASyB,QAAU3B,CAAM,GAAE,CAACA,IAElD,MAAMC,GAAWoC,EAAAA,EAAAA,cAAayH,IAE1B4H,EADe,oBAAN5H,EACE8H,GAAY1R,EAASyB,QAAUmI,EAAE8H,GAC9B1R,EAASyB,QAAUmI,EAAG,GACrC,IAEH,MAAO,CAAC9J,EAAOC,EAAUC,EAC3B,CAEO,SAAS2R,EAAQC,EAAWC,GACjC,OAAOD,GAAaA,EAAU9R,QAAU+R,CAC1C,C,yICzDO,MAAMC,EAAgB,mDAEhBzB,EAAW5M,KAAKgI,QAChBsG,EAAW,EACXC,EAAc3B,EAAWA,EACzBC,EAAcyB,EAAW1B,EAChC4B,EAAY,IAGlB,SAASC,EAAahK,GACpB,GAAIA,GAAK+J,EAAW,CAGlB,OAFqBxO,KAAKgI,SAEF,EAAIvD,IAAO,EAAI+J,EACzC,CAGA,MAAME,EAAyB,GAAhB,EADiBjK,GAuBpB8J,EAAc1B,IAtBS,EAE7B8B,EAAQ3O,KAAK4O,KAAKF,GAGxB,OAFc1O,KAAKoJ,IAAIuF,EAGzB,CAGA,SAASE,EAAWpK,GAClB,OAAQA,EAAImI,EAAWC,IAAgB,EAAI7M,KAAKqJ,MAClD,CAEA,SAASyF,EAAWC,GAClB,OAAOA,GAAM,EAAI/O,KAAKqJ,OAASuD,EAAWC,CAC5C,CAyDO,SAASmC,EAAeC,EAAQC,GAAiB,IAAXC,EAAIvQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClD,GAAIoB,KAAKoP,IAAIH,EAASC,GAAQ,IAAM,MAAO,GAE3C,MAAMlG,EAAOmG,EAAO,EAAIb,EAAY1B,EAE9ByC,EAAU,GAEV7F,EAAS,GAEf,IAAI8F,EAAKC,EAAKC,EAAKC,EAEnB,IAAK,IAAI/P,EAAI,EAAGA,GAAKM,KAAK0P,KAAK,MAC7BJ,EAAMb,EAAaQ,GAAUvP,EAAI,GAAK2P,GACtCE,EAAMV,EAAWI,GAAUvP,EAAI,GAAK2P,GACpCG,EAAMf,EAAaQ,EAASvP,EAAI2P,GAChCI,EAAMZ,EAAWI,EAASvP,EAAI2P,KAE1BP,EAAWW,IAAQP,IANoBxP,IAAK,CAShD,MAAMiQ,EAAK,EAAEL,EAAMtG,GAAMuG,EAAMvG,GAC7B4G,EAAK,CAACN,EAAMtG,GAAMuG,EAAMvG,GACxB6G,EAAK,CAACL,EAAMxG,GAAMyG,EAAMzG,GACxB8G,EAAK,EAAEN,EAAMxG,GAAMyG,EAAMzG,GAE3BQ,EAAO1E,KAAK,CAAC6K,EAAIC,EAAIC,IACrBrG,EAAO1E,KAAK,CAAC6K,EAAIE,EAAIC,GACvB,CAEAN,EAAMf,EAAaS,GACnBO,EAAMZ,EAAWK,GAGjB,MAAMS,EAAK,EAAEL,EAAMtG,GAAMuG,EAAMvG,GAC7B4G,EAAK,CAACN,EAAMtG,GAAMuG,EAAMvG,GACxB6G,EAAK,CAACL,EAAMxG,GAAMyG,EAAMzG,GACxB8G,EAAK,EAAEN,EAAMxG,GAAMyG,EAAMzG,GAK3B,OAHAQ,EAAO1E,KAAK,CAAC6K,EAAIC,EAAIC,IACrBrG,EAAO1E,KAAK,CAAC6K,EAAIE,EAAIC,IAEdtG,CACT,CAeA,MAAMuG,EAMJC,WAAAA,CAAYC,GAA0B,IAAfC,IAAKtR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAO,KALnCuR,UAAY,IAAIlI,EAAAA,IAAuB,KACvCmI,YAAc,EAKZC,KAAKF,UAAUG,aACb,WACA,IAAIrI,EAAAA,IAAsB,IAAIsI,aAAyB,EAAZN,GAAgB,IAGzDC,GACFG,KAAKF,UAAUG,aACb,QACA,IAAIrI,EAAAA,IAAsB,IAAIsI,aAAyB,EAAZN,GAAgB,IAG/DI,KAAKG,kBAAoBH,KAAKF,UAAUM,aAAa,YACrDJ,KAAKK,eAAiBL,KAAKF,UAAUM,aAAa,QACpD,CAEAE,aAAAA,CAAcC,EAAY7S,EAAWmS,GAAe,IAARW,EAACjS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC9C,IAAK,IAAIiJ,EAAI,EAAGA,EAAI+I,EAAW/R,OAAQgJ,IAAK,CAC1C,MAAO8H,EAAIC,EAAIC,GAAMe,EAAW/I,GAEhCwI,KAAKG,kBAAkBM,OACF,EAAnBT,KAAKD,YAAkB,EACvBrS,EAAUyG,EAAImL,EAAG,GACjB5R,EAAU0G,EAAIkL,EAAG,GACjBkB,GAGFR,KAAKG,kBAAkBM,OACF,EAAnBT,KAAKD,YAAkB,EACvBrS,EAAUyG,EAAIoL,EAAG,GACjB7R,EAAU0G,EAAImL,EAAG,GACjBiB,GAGFR,KAAKG,kBAAkBM,OACF,EAAnBT,KAAKD,YAAkB,EACvBrS,EAAUyG,EAAIqL,EAAG,GACjB9R,EAAU0G,EAAIoL,EAAG,GACjBgB,GAGEX,IACFG,KAAKK,eAAeI,OACC,EAAnBT,KAAKD,YAAkB,EACvBF,EAAM/N,EACN+N,EAAMa,EACNb,EAAMzJ,GAER4J,KAAKK,eAAeI,OACC,EAAnBT,KAAKD,YAAkB,EACvBF,EAAM/N,EACN+N,EAAMa,EACNb,EAAMzJ,GAER4J,KAAKK,eAAeI,OACC,EAAnBT,KAAKD,YAAkB,EACvBF,EAAM/N,EACN+N,EAAMa,EACNb,EAAMzJ,IAIV4J,KAAKD,aACP,CACF,CAEAY,MAAAA,GACEX,KAAKF,UAAUc,aAAa,EAAsB,EAAnBZ,KAAKD,YACtC,EAGK,MAAMjI,EAAc6H,WAAAA,GAAA,KAOzBkB,OAAQ,CAAM,CAEd/L,UAAAA,CAAWtJ,GACJwU,KAAKpS,UAGRoS,KAAKc,aAAatV,GAFlBwU,KAAKe,iBAAiBvV,EAI1B,CAEAwV,IAAAA,CAAK7S,GACE6R,KAAKa,QACR1S,EAAM6N,IAAIgE,KAAKpS,WACfO,EAAM6N,IAAIgE,KAAKiB,aACfjB,KAAKa,OAAQ,EAEjB,CAEAK,MAAAA,CAAO/S,GACD6R,KAAKa,QACP1S,EAAM+S,OAAOlB,KAAKpS,WAClBO,EAAM+S,OAAOlB,KAAKiB,aAClBjB,KAAKa,OAAQ,EAEjB,CAEAE,gBAAAA,CAAiBvV,GACf,MAAM2V,EAAgB,IAAIzB,EAAa5H,EAAcsJ,kBAC/CC,EAAgB,GAEhBC,EA1NH,SAA+B1C,EAAQC,GAAiB,IAAXC,EAAIvQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACzD,GAAIoB,KAAKoP,IAAIH,EAASC,GAAQ,IAAM,MAAO,GAE3C,MAAMlG,EAAOmG,EAAO,EAAIb,EAAY1B,EAE9ByC,EAAU,GAEVuC,EAAc,GACdC,EAAa,GAEnB,IAAIvC,EAAKC,EAAKC,EAAKC,EAEnB,IAAK,IAAI/P,EAAI,EAAGA,GAAKM,KAAK0P,KAAK,MAC7BJ,EAAMb,EAAaQ,GAAUvP,EAAI,GAAK2P,GACtCE,EAAMV,EAAWI,GAAUvP,EAAI,GAAK2P,GACpCG,EAAMf,EAAaQ,EAASvP,EAAI2P,GAChCI,EAAMZ,EAAWI,EAASvP,EAAI2P,KAE1BP,EAAWW,IAAQP,IANoBxP,IAAK,CAShD,MAAMiQ,EAAK,EAAEL,EAAMtG,GAAMuG,EAAMvG,GAC7B4G,EAAK,CAACN,EAAMtG,GAAMuG,EAAMvG,GACxB6G,EAAK,CAACL,EAAMxG,GAAMyG,EAAMzG,GACxB8G,EAAK,EAAEN,EAAMxG,GAAMyG,EAAMzG,GAE3B4I,EAAY9M,KAAK8K,EAAIC,GACrBgC,EAAW/M,KAAK6K,EAAIG,EACtB,CAEAN,EAAMf,EAAaS,GACnBO,EAAMZ,EAAWK,GAGjB,MAAMS,EAAK,EAAEL,EAAMtG,GAAMuG,EAAMvG,GAC7B4G,EAAK,CAACN,EAAMtG,GAAMuG,EAAMvG,GACxB6G,EAAK,CAACL,EAAMxG,GAAMyG,EAAMzG,GACxB8G,EAAK,EAAEN,EAAMxG,GAAMyG,EAAMzG,GAO3B,OALA4I,EAAY9M,KAAK8K,EAAIC,GACrBgC,EAAW/M,KAAK6K,EAAIG,GAEpB8B,EAAY9M,QAAQ+M,EAAWC,WAExBF,CACT,CA6K8BG,CACxB,EACA,EACe,EAAfrQ,EAAAA,GAAmB,MAGrB,IAAK,IAAIhC,EAAI,EAAGA,EAAI7D,EAAW8G,MAAM9D,OAAQa,IAAK,CAChD,MAAM,GAAEkB,EAAIgE,QAASJ,EAAGK,QAASJ,EAAC,KAAEpB,EAAI,OAAEa,GAAWrI,EAAW8G,MAAMjD,GAEtE,IAAK,IAAItB,EAAIiF,EAAKxE,OAAS,EAAGT,GAAK,EAAGA,IAAK,CACzC,MAGMwS,EAAa5B,GAHR5Q,IAAMiF,EAAKxE,OAAS,EAAIwE,EAAKjF,EAAI,GAAK,GAI1C8F,EAHIb,EAAKjF,GAIT8F,EACU,EAAfxC,EAAAA,IAEIwO,EAAQ,IAAIjI,EAAAA,KAChB1C,EAAAA,EAAAA,IAA0BnH,EAAImF,EAAAA,KAGhCiO,EAAcb,cACZC,EACA,CAAEpM,EAAGA,EAAGC,GAAIA,GACZyL,EACCxQ,EAAI,EAAK,GAAK,IAEnB,CAEAgS,EAAc5M,QACT6M,EAAkB3P,KACnBM,IAAA,IAAE0P,EAAIC,GAAG3P,EAAA,OAAK,IAAI2F,EAAAA,IAAczD,EAAIwN,GAAKvN,EAAIwN,EAAKvS,EAAI,EAAK,GAAK,IAAK,IAG3E,CAEA8R,EAAcR,SAEdX,KAAKpS,UAAY,IAAIgK,EAAAA,IACnBuJ,EAAcrB,UACd,IAAIlI,EAAAA,IAAwB,CAC1BiK,cAAc,EACdC,aAAa,EACbC,QAAS,KAIb/B,KAAKiB,YAAc,IAAIrJ,EAAAA,KACrB,IAAIA,EAAAA,KAAuBoK,cAAcX,GACzC,IAAIzJ,EAAAA,IAAwB,CAC1BiI,MAAO,SACPiC,aAAa,EACbC,QAAS,IAGf,CAEAlU,uBAAAA,CAAwBoU,GACjBjC,KAAKiB,cACVjB,KAAKiB,YAAYiB,SAASH,QAAUE,EACpCjC,KAAKiB,YAAYiB,SAASC,aAAc,EAC1C,CAEAC,gBAAAA,CAAiBH,GACVjC,KAAKiB,aAAgBjB,KAAKpS,YAC/BoS,KAAKiB,YAAYiB,SAASH,QAAUE,EACpCjC,KAAKiB,YAAYiB,SAASC,aAAc,EACxCnC,KAAKpS,UAAUsU,SAASH,QAAUE,EAClCjC,KAAKpS,UAAUsU,SAASC,aAAc,EACxC,CAEArB,YAAAA,CAAatV,GACX,EA9GSsM,EACJsJ,iBAAmB,KADftJ,EAEJuK,mBAAqB,KAgHvB,MAAMtK,EAAwB4H,WAAAA,GAAA,KAEnCkB,OAAQ,EAAM,KAEdyB,SAAW,CAAC,EAAE,KACdC,SAAW,CAAC,CAAE,CAEdvB,IAAAA,CAAK7S,GACE6R,KAAKa,QACR1S,EAAM6N,IAAIgE,KAAKwC,MACfxC,KAAKa,OAAQ,EAEjB,CAEAK,MAAAA,CAAO/S,GACD6R,KAAKa,QACP1S,EAAM+S,OAAOlB,KAAKwC,MAClBxC,KAAKa,OAAQ,EAEjB,CAEA/L,UAAAA,CAAWtJ,GAOT,OANKwU,KAAKwC,MACRxC,KAAKyC,eAAejX,GAGtBwU,KAAK0C,WAAWlX,GAETwU,KAAKwC,IACd,CAEAC,cAAAA,CAAejX,GACb,MAAMmX,EAAiB,IAAI/K,EAAAA,IAErB8D,EAAW,GACXkH,EAAS,GAEf,IAAK,IAAIvT,EAAI,EAAGA,EAAI7D,EAAW8G,MAAM9D,OAAQa,IAAK,CAChD,MAAM,GAAEkB,EAAIgE,QAASJ,EAAGK,QAASJ,EAAC,KAAEpB,EAAI,OAAEc,GAAWtI,EAAW8G,MAAMjD,GAEhEwQ,EAAQ/L,EAAS,GAAIoB,EAAAA,EAAAA,IAA0BpB,GAAU,QAE/D4H,EAASjH,KAAKN,GAAIC,EAAG,GACrB,MAAMyO,EAAU,IAAIjL,EAAAA,IAAYiI,GAChC+C,EAAOnO,KAAKoO,EAAQ/Q,EAAG+Q,EAAQnC,EAAGmC,EAAQzM,GAE1C4J,KAAKsC,SAASjT,GAAKkB,EACnByP,KAAKuC,SAAShS,GAAMlB,CACtB,CAEA,MAAMyT,EAAiB,IAAIlL,EAAAA,IAAqB,CAC9CkH,KAAqB,EAAfzN,EAAAA,GACN0R,iBAAiB,EACjBlB,cAAc,EACdlQ,KAAK,IAAIiG,EAAAA,KAAsBoL,KAAK,YACpClB,aAAa,IAGfa,EAAe1C,aACb,WACA,IAAIrI,EAAAA,IAAsB,IAAIsI,aAAaxE,GAAW,IAGxDiH,EAAe1C,aACb,QACA,IAAIrI,EAAAA,IAAsB,IAAIsI,aAAa0C,GAAS,IAGtD5C,KAAKwC,KAAO,IAAI5K,EAAAA,IAAa+K,EAAgBG,EAC/C,CAEAJ,UAAAA,CAAWlX,GACT,MAAMyX,EAAejD,KAAKwC,KAAKU,SAAS9C,aAAa,YACrD,IAAK,IAAI/Q,EAAI,EAAGA,EAAI7D,EAAW8G,MAAM9D,OAAQa,IAAK,CAChD,MAAM,GAAEkB,EAAIgE,QAAS4O,EAAM3O,QAAS4O,GAAS5X,EAAW8G,MAAMjD,GACxDwC,EAAMmO,KAAKuC,SAAShS,GAC1B0S,EAAaI,MAAMxR,EAAKsR,GAAOC,EACjC,CACAH,EAAad,aAAc,CAC7B,CAEAmB,YAAAA,CAAa9X,EAAY+X,EAAcC,GACrC,MAAMC,EAAQzD,KAAKwC,KAAKU,SAASxH,SAEjC,IAAK,IAAIrM,EAAI,EAAGA,EAAI7D,EAAW8G,MAAM9D,OAAQa,IAAK,CAChD,MAAM,GAAEkB,GAAO/E,EAAW8G,MAAMjD,GAC1BwC,EAAMmO,KAAKuC,SAAShS,IAEnBoR,EAAIC,GAAM2B,EAAahT,GAExB4D,EAAIsP,EAAM5R,GAAKsC,EACfC,EAAIqP,EAAM5R,GAAKuC,EAErBqP,EAAM5R,GAAK6R,KAAKvP,EAAIqP,EAAK7B,GACzB8B,EAAM5R,GAAK8R,KAAKvP,EAAIoP,EAAK5B,EAC3B,CAEA5B,KAAKwC,KAAKU,SAASU,oBAAqB,CAC1C,CAEAC,eAAAA,CAAgBxW,EAAQ8G,EAAGC,GACzB,MAAM0P,EAAazW,EAAOwW,gBAAgB1P,EAAGC,EAAG4L,KAAKwC,MAErD,GAAIsB,EAAW,GAAI,CACjB,MAAMC,GAAYlH,EAAAA,EAAAA,IAAOiH,EAAY,iBAAiB,GACtD,OAAO9D,KAAKsC,SAASyB,EAAUC,MACjC,CAEA,OAAO,IACT,EAGK,MAAMhM,EAeX2H,WAAAA,CAAWtN,GAAsB,IAArB,IAAE4F,EAAG,KAAEC,EAAI,IAAEC,GAAK9F,EAAA,KAJ9B4R,UAAY,IAAIrM,EAAAA,IAKdoI,KAAK/H,IAAMA,EACX+H,KAAK9H,KAAOA,EACZ8H,KAAK7H,IAAMA,CACb,CAEA1K,SAAAA,CAAUyW,GACRlE,KAAKmE,KAAOjX,EAAAA,MAAUkX,GAAG,QAASC,IAChCrE,KAAKsE,aAAeD,EAAE3W,UAEtBsS,KAAKuE,kBAAkBF,EAAE3W,WACzBR,EAAAA,IAAU8S,KAAKwE,aAAarX,KAAK,YAAakX,EAAE3W,WAEhDwW,GAAUA,EAAOG,EAAE3W,UAAU,GAEjC,CAEAmC,QAAAA,CAASnC,GACPsS,KAAKmE,KAAKzW,UACRsS,KAAKyE,KACLvX,EAAAA,IAAgBwX,UAAUhX,EAAUyG,EAAGzG,EAAU0G,GAAG2H,MAAMrO,EAAUK,GAExE,CAEAiB,yBAAAA,CAAyBiM,GAAiC,IAAhC,OAAEhM,EAAM,OAAEC,EAAM,UAAEC,GAAW8L,EACrD,MAAMlN,EAAIiS,KAAKpR,OAASO,EAElBgF,GAAMlF,EAASlB,EAAKiS,KAAKtH,MAAQ,EACjCtE,EAAIlF,EAASnB,EAAIiS,KAAKpR,OAAS,EAErCoR,KAAKnQ,SAAS,CACZsE,IACAC,IACArG,KAEJ,CAEAc,iBAAAA,CAAkBM,GAChB,OAAQQ,KAAKgV,KAAIlI,EAAAA,EAAAA,IAAU,GAAKuD,KAAK/H,IAAM,IAAM9I,EAAa,CAChE,CAEAyV,iBAAAA,CAAkBpE,GAChB,OAAO7Q,KAAKgV,KAAIlI,EAAAA,EAAAA,IAAUuD,KAAK/H,KAAO,GAAKuI,EAAI,CACjD,CAEAlR,qBAAAA,CAAqBgN,GAAsB,IAApBuI,EAAMC,EAAMC,GAAKzI,EACtC,MAAMjN,EAAInC,EAAAA,GACR,CACE8S,KAAK3S,OAAOmO,SAASrH,EACrB6L,KAAK3S,OAAOmO,SAASpH,EACrB4L,KAAKpR,OAASoR,KAAKsE,aAAavW,GAElC,CAAC8W,GAAOC,EAAM9E,KAAK4E,kBAAkBG,KAGjCC,EAAYxV,IAChB,MAAOP,EAAQC,EAAQC,GAAaE,EAAEG,GAEhCzB,EAAIiS,KAAKpR,OAASO,EAKxB,MAAO,CACLgF,GAJUlF,EAASlB,EAAKiS,KAAKtH,MAAQ,EAKrCtE,EAJQlF,EAASnB,EAAIiS,KAAKpR,OAAS,EAKnCb,IACD,EAKH,OAFAiX,EAASzV,SAAWF,EAAEE,SAEfyV,CACT,CAEA1X,KAAAA,CAAM2X,EAAcC,GAClBlF,KAAKyE,KAAOvX,EAAAA,IAAU+X,GACtBjF,KAAKwE,YAAcU,CACrB,CAEAlX,OAAAA,CAAQ0K,EAAO9J,GACboR,KAAKtH,MAAQA,EACbsH,KAAKpR,OAASA,EAEdoR,KAAKmE,KAAOnE,KAAKmE,KAAKgB,YAAY,CAChCnF,KAAKoF,cAAcpF,KAAK7H,KACxB6H,KAAKoF,cAAcpF,KAAK9H,QAG1B8H,KAAK3S,OAAS,IAAIuK,EAAAA,IAChBoI,KAAK/H,IACLS,EAAQ9J,EACRoR,KAAK9H,KACL8H,KAAK7H,IAAM,GAGb6H,KAAK3S,OAAOmO,SAAS6J,IAAI,EAAG,EAAGrF,KAAK7H,KAEpC6H,KAAKyE,KAAKa,KAAKtF,KAAKmE,MACpBnE,KAAKmE,KAAKzW,UACRsS,KAAKyE,KACLvX,EAAAA,IACGwX,UAAU1E,KAAKtH,MAAQ,EAAGsH,KAAKpR,OAAS,GACxCmN,MAAMiE,KAAKoF,cAAcpF,KAAK7H,MAErC,CAEAoM,iBAAAA,CAAkB7W,GAChB,MAAMqO,EAAQrO,EAAUK,EAClBoG,IAAMzG,EAAUyG,EAAI6L,KAAKtH,MAAQ,GAAKqD,EACtC3H,GAAK1G,EAAU0G,EAAI4L,KAAKpR,OAAS,GAAKmN,EACtCyE,EAAIR,KAAKuF,cAAcxJ,GAC7BiE,KAAK3S,OAAOmO,SAAS6J,IAAIlR,EAAGC,EAAGoM,EACjC,CAEA4E,aAAAA,CAAcI,GACZ,MAAMC,EAAWzF,KAAK/H,IAAM,EACtByN,GAAmBjJ,EAAAA,EAAAA,IAAUgJ,GAE7BE,EAA+B,GADbhW,KAAKgV,IAAIe,GAAoBF,GAGrD,OADcxF,KAAKpR,OAAS+W,CAE9B,CAEAJ,aAAAA,CAAcxJ,GACZ,MAAM0J,EAAWzF,KAAK/H,IAAM,EACtByN,GAAmBjJ,EAAAA,EAAAA,IAAUgJ,GAGnC,OAFqBzF,KAAKpR,OAASmN,GACO,EAAIpM,KAAKgV,IAAIe,GAEzD,CAEA7B,eAAAA,CAAgB+B,EAAQC,EAAQrD,GAS9B,OARAxC,KAAKiE,UAAU6B,cACb,CACE3R,EAAGyR,EACHxR,EAAGyR,GAEL7F,KAAK3S,QAGA2S,KAAKiE,UAAUJ,gBAAgBrB,EACxC,E,kGC9lBa,SAAS9R,IACtB,MAAM,MACJ1E,EAAK,SACLC,EAAQ,UACRO,EAAS,OACTa,EAAM,YACNe,EAAW,iBACXhC,EAAgB,WAChBZ,IACEua,EAAAA,EAAAA,YAAW/V,EAAAA,IAERgW,EAAgBC,IAAqB3Z,EAAAA,EAAAA,YACtC4Z,GAAYvI,EAAAA,EAAAA,WAElB/Q,EAAAA,EAAAA,YAAU,KACR,GAAIoZ,EAAgB,CAClB,MAAMG,EAAY,GAClB,IAAK,IAAI9W,EAAI,EAAGA,EAAI6W,EAAUvY,QAAQgH,OAAOnG,OAAQa,IAAK,CACxD,MAAMgF,EAAQ6R,EAAUvY,QAAQgH,OAAOtF,GACjC+W,EAAWF,EAAUvY,QAAQ0Y,eAAehX,GAE5C9B,EAAO8G,EAAM/B,MAAMgU,MAAMC,GAAMA,EAAEjS,MAAQ0R,IAE/CG,EAAU1R,KAAK,CACJ,IAATlH,EAAK4G,EAAUiS,EAAS,GACf,IAAT7Y,EAAK6G,EAAUgS,EAAS,IAE5B,CAEA,MAAMI,EAAQ,GAER5X,EAAwB,EAAfyC,EAAAA,GACf,IAAK,IAAIhC,EAAI,EAAGA,EAAI8W,EAAU3X,OAAQa,IAAK,CACzC,MAAM4G,EAAOD,MAAMC,KAAKkQ,EAAU9W,IAChCoX,EAAKzQ,MAAMC,KAAKkQ,EAAU9W,EAAI,GAAK8W,EAAU3X,OAAS,EAAIa,EAAI,IAE1DqX,EAAM/W,KAAKwB,MAAM8E,EAAK,GAAKwQ,EAAG,KAAO,GAAKxQ,EAAK,GAAKwQ,EAAG,KAAO,GAC9DE,EAAS,EAAEF,EAAG,GAAKxQ,EAAK,IAAMyQ,GAAMD,EAAG,GAAKxQ,EAAK,IAAMyQ,GAE7DzQ,EAAK,IAAM0Q,EAAO,GAAK/X,EACvBqH,EAAK,IAAM0Q,EAAO,GAAK/X,EACvB6X,EAAG,IAAME,EAAO,GAAK/X,EACrB6X,EAAG,IAAME,EAAO,GAAK/X,EAErB4X,EAAM/R,KAAK,CAACwB,EAAMwQ,GACpB,CAEAvZ,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,gBACVC,KAAKV,GACLW,KAAK,UACL3Z,KAAK,QAAS,eACdA,KAAK,UAAW,WAChB4Z,MAAM,iBAAkB,QACxB5Z,KAAK,OAAQ,eACbA,KAAK,SAAU,UACfA,KAAK,mBAAoB,GACzBA,KAAK,eAAgB,GACrBA,KAAK,gBAAiB,sBACtBA,KAAK,IAAMyB,EAAS,EAAK,KACzBoY,aACAzX,SAAS,KACTpC,KAAK,MAAOgG,GAAMA,EAAE,KACpBhG,KAAK,MAAOgG,GAAMA,EAAE,GAAc,IAATvE,IAE5B1B,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,cACVC,KAAKL,GACLM,KAAK,QACL3Z,KAAK,QAAS,aACdA,KAAK,SAAU,UACfA,KAAK,mBAAoB,GACzBA,KAAK,UAAW,IAChBA,KAAK,eAAgB,GACrBA,KAAK,gBAAiB,sBACtB6Z,aACAzX,SAAS,KACTpC,KAAK,KAAMgG,GAAMjG,EAAAA,KAAAA,CAAUiG,IAChC,IACC,CAAC6S,KAEJpZ,EAAAA,EAAAA,YACE,WACE,IAAIiR,EAAAA,EAAAA,IAAQ7R,EAAO,eAAgB,CAwBjC,OAwCR,SACEib,EACAC,EACAC,EAAelV,GAEd,IADD,QAAEtB,EAAO,QAAEyW,EAAO,UAAEC,GAAWpV,EAE/BgV,EACGL,UAAU,kBACVC,KAAKK,EAAgBvS,QACrBmS,MAAMQ,GACEA,EACJla,OAAO,KACPD,KAAK,QAAS,iBACdoa,MAAK,SAAAlV,GAAsB,IAAZ,MAAEC,GAAOD,EACvBnF,EAAAA,IAAU8S,MACP4G,UAAU,kBACVC,KAAKvU,GACLgV,QACAla,OAAO,KACPD,KAAK,QAAS,iBACdoa,MAAK,SAAAtM,GAAqB,IAAX,KAAEjI,GAAMiI,EACtB,MAAM9I,EAAIjF,EAAAA,IAAU8S,MACpB7N,EAAE/E,OAAO,QACND,KAAK,QAAS,QACd4Z,MAAM,aAAc,UAEvB,MAAMS,EAAS7X,KAAK6K,MAAsB,IAAhB7K,KAAKsE,UAEzBwT,EAAQva,EAAAA,IACJ8S,MACP5S,OAAO,QACPA,OAAO,kBACPD,KAAK,KAAK,GAADua,OAAKF,IACdra,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,QACdsa,EAAMra,OAAO,QAAQD,KAAK,aAAc,eACxCsa,EAAMra,OAAO,QAAQD,KAAK,aAAc,eAExC6F,EAAK2U,SAAQ,CAAChR,EAAGtH,KACfoY,EACGra,OAAO,QACPD,KACC,cACA+H,EAAAA,EAAAA,IAA0B7F,EAAIoI,EAAAA,KAElCgQ,EACGra,OAAO,QACPD,KACC,cACA+H,EAAAA,EAAAA,IAA0B7F,EAAIoI,EAAAA,IAC/B,IAGLtF,EAAE/E,OAAO,QACND,KAAK,IAAK6Q,EAAAA,IACV7Q,KAAK,QAAS,WACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,KAExBgF,EAAE/E,OAAO,QACND,KAAK,QAAS,QACdA,KAAK,IAAK6Q,EAAAA,IACV7Q,KAAK,OAAO,QAADua,OAAUF,EAAM,KAChC,GACJ,MAEHra,KAAK,UAAW,WAChBA,KAAK,aAAa,CAAAmP,EAAWjN,KAAC,IAAX,EAAE8E,EAAC,EAAEC,GAAGkI,EAAA,mBAAAoL,OAAqBvT,EAAC,MAAAuT,OAAKtT,EAAC,QACvDmT,MAAK,SAAAK,GAAsB,IAAZ,MAAEtV,GAAOsV,EACvB1a,EAAAA,IAAU8S,MACP4G,UAAU,kBACVC,KAAKvU,GACLnF,KAAK,UAAW,WAChBA,KACC,aACA0a,IAAA,IAAC,KAAE7T,EAAI,EAAEG,EAAC,EAAEC,GAAGyT,EAAA,mBAAAH,OAAkBvT,EAAC,MAAAuT,OAAKtT,EAAC,YAAY,EAAC,QAEtDgQ,GAAG,SAAS,SAAUC,EAAGlR,GACxBxC,GAAWA,EAAQwC,EACrB,IACCiR,GAAG,cAAc,SAAUC,EAAGlR,GAC7BiU,GAAWA,EAAQjU,EACrB,IACCiR,GAAG,cAAc,SAAUC,EAAGlR,GAC7BkU,GAAaA,EAAUlU,EACzB,IACCoU,MAAK,SAAAO,EAAiCzY,GAAI,IAA3B,KAAE2D,EAAI,OAAEa,EAAM,IAAES,GAAKwT,EACnC,MAAM3V,EAAIjF,EAAAA,IAAU8S,MAEpB7N,EAAE3E,OAAO,YAAYL,KACnB,YAAY,SAADua,OACa,IAAfrW,EAAAA,GAAmB,MAE9Bc,EAAE3E,OAAO,SAASL,KAAK,YAAY,SAADua,OAAWrW,EAAAA,GAAY,MAEzDc,EAAEyU,UAAU,QAAQW,MAAK,SAAU5Q,EAAGtH,GACpC,IAAI0Y,EAAOpY,KAAK6K,MAAMnL,EAAI,GAGZ,IAFAA,EAAI,IAED0Y,GAAQ,IAEX,IAAVA,EACF7a,EAAAA,IAAU8S,MAAM7S,KAAK,SAAS,GAADua,OAAK,EAAC,MAC1BK,IAAS/U,EAAKxE,OACvBtB,EAAAA,IAAU8S,MAAM7S,KAAK,SAAS,QAE9BD,EAAAA,IAAU8S,MAAM7S,KACd,SAAS,GAADua,OACuB,KAA3B,EAAI1U,EAAK+U,GAAQlU,GAAa,KAGxC,IAEA,MAAMV,EAAIhB,EAAE3E,OAAO,SAEnB2E,EAAE3E,OAAO,SACNL,KAAK,IAAKgG,EAAE5F,OAAOya,UAAU7T,GAC7BhH,KAAK,IAAKgG,EAAE5F,OAAOya,UAAU5T,GAC7BjH,KAAK,QAASgG,EAAE5F,OAAOya,UAAUtP,OACjCvL,KAAK,SAAUgG,EAAE5F,OAAOya,UAAUpZ,OACvC,IACCoY,aACAiB,MAAMd,GACN5X,SAAS,KACTpC,KACC,aACA+a,IAAA,IAAC,KAAElU,EAAI,EAAEG,EAAC,EAAEC,GAAG8T,EAAA,mBAAAR,OAAsB,IAAJvT,EAAO,MAAAuT,OAAS,IAAJtT,EAAO,YAAY,EAAC,OAEvE,IACC4S,aACAiB,MAAMd,GACN5X,SAAS,KACTpC,KACC,aACA,CAACwJ,EAAGtH,IAAC,aAAAqY,OACUR,EAAgBb,eAAehX,GAAG,GAAE,MAAAqY,OAAKR,EAAgBb,eAAehX,GAAG,GAAE,MAElG,CAzMQ8Y,CAFkBjb,EAAAA,IAAU,eAAeM,OAAO,cAI/C0Y,EAAUvY,QAwCrB,SAA4Bya,EAAQ5c,EAAY6c,GAC9C,MAAM1T,EAASnJ,EAAWmJ,OAAO+B,QAAQgK,GAAM0H,EAAOE,SAAS5H,EAAEpM,OAE3D+R,EAAiB,GACjB1N,EAAMhE,EAAO,GAAG/F,OAEtB,IAAK,IAAIS,EAAI,EAAGkX,EAAI5R,EAAOnG,OAAQa,EAAIkX,EAAGlX,IACxCgX,EAAe5R,KAAK,CAClB4T,EAAO,GAAK1Y,KAAKmJ,IAAgB,EAAVnJ,KAAKyB,GAAUmV,EAAKlX,GAAKsJ,EAChD0P,EAAO,GAAK1Y,KAAKoJ,IAAgB,EAAVpJ,KAAKyB,GAAUmV,EAAKlX,GAAKsJ,IAIpD,MAAO,CACLhE,SACA0R,iBAEJ,CAzD+BkC,CACnBnc,EACAZ,EACAQ,EAAMwc,UAERxc,EAAMyc,mBAAqB,EAC3B,CACErB,QAAUjU,IACR8S,EAAkB9S,EAAEmB,IAAI,IAK9B9H,GAAU,IAAM,KACdP,EAAS,CAAED,MAAO,aAElBoC,GAAa,IAGR,KACLlB,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,kBACV1F,SACHhU,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,gBACV1F,SACHhU,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,cACV1F,SACH1U,EAAU,KAAK,CAEnB,CACF,GACA,CAACR,GAEL,C,oJC9He,SAASyE,IACtB,MAAM,MACJzE,EAAK,SACLC,EAAQ,UACRO,EAAS,OACTa,EAAM,YACNe,EAAW,iBACXhC,EAAgB,WAChBZ,IACEua,EAAAA,EAAAA,YAAW/V,EAAAA,GAmDf,OAjDApD,EAAAA,EAAAA,YAAU,WAUR,GACC,KAEHA,EAAAA,EAAAA,YACE,WACE,IAAIiR,EAAAA,EAAAA,IAAQ7R,EAAO,eAAgB,CACjC,MAAMmb,EAAkBnb,EAAMyc,mBAqB9B,OAlBAC,EAFkBxb,EAAAA,IAAU,eAAeM,OAAO,cAIhDmb,EACEnd,EAAWmJ,OACR2R,MAAM5F,GAAMA,EAAEpM,MAAQlI,EAAiB,KACvCkG,MAAMX,KAAK4U,GAAMA,EAAEhW,KACtB/E,EAAW8G,OAEb6U,EAAkB,EAClB,CAAC,GAGH3a,GAAU,IAAM,KACdP,EAAS,CAAED,MAAO,aAElBoC,GAAa,IAGR,KACLlB,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,cACVzZ,KAAK,UAAW,QACnBX,EAAU,KAAK,CAEnB,CACF,GACA,CAACR,KAGIsE,EAAAA,EAAAA,KAAAsY,EAAAA,SAAA,GACT,CAEA,SAASD,EAAcE,EAASrd,GAC9B,MAAMsd,EAAM,GAEZ,IAAK,MAAMC,KAAUF,EAAS,CAC5B,MAAM,GAAEtY,EAAE,WAAEsC,GAAeH,EAAAA,GAAeqW,GAS1CD,EAAIrU,KAAK,IACJjJ,EAAW+E,IAGlB,CAEA,OAAOuY,CACT,CAEA,SAASJ,EACPzB,EACAzb,EACA2b,EAAelV,GAEd,IADD,QAAEtB,EAAO,QAAEyW,EAAO,UAAEC,GAAWpV,EAE/BgV,EACGL,UAAU,cACVC,KAAKrb,GACLsb,MAAMQ,GACEA,EACJla,OAAO,KACPD,KAAK,QAAS,aACdoa,MAAK,SAAAlV,EAAoBhD,GAAI,IAAd,KAAE2D,GAAMX,EAGtB,MAAMF,EAAIjF,EAAAA,IAAU8S,MACpB7N,EAAE/E,OAAO,QAAQD,KAAK,QAAS,QAAQ4Z,MAAM,aAAc,UAE3D,MAAMU,EAAQva,EAAAA,IACJ8S,MACP5S,OAAO,QACPA,OAAO,kBACPD,KAAK,KAAK,aAADua,OAAerY,IACxBlC,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,QACdsa,EAAMra,OAAO,QAAQD,KAAK,aAAc,eACxCsa,EAAMra,OAAO,QAAQD,KAAK,aAAc,eAExC6F,EAAK2U,SAAQ,CAAChR,EAAGtH,KACfoY,EACGra,OAAO,QACPD,KAAK,cAAc+H,EAAAA,EAAAA,IAA0B7F,EAAIoI,EAAAA,KACpDgQ,EACGra,OAAO,QACPD,KAAK,cAAc+H,EAAAA,EAAAA,IAA0B7F,EAAIoI,EAAAA,IAAc,IAGpEtF,EAAE/E,OAAO,QACND,KAAK,IAAK6Q,EAAAA,IACV7Q,KAAK,QAAS,WACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,KAExBgF,EAAE/E,OAAO,QACND,KAAK,QAAS,QACdA,KAAK,IAAK6Q,EAAAA,IACV7Q,KAAK,OAAO,kBAADua,OAAoBrY,EAAC,MAEnC8C,EAAE/E,OAAO,KACND,KAAK,QAAS,WACdC,OAAO,UACPD,KAAK,OAAQ,eACbA,KAAK,SAAU,eACfA,KAAK,mBAAoB,GACzBA,KAAK,eAAgB,GACrBA,KAAK,gBAAiB,sBACtBA,KAAK,IAAK,IACf,MAEHA,KAAK,UAAW,WAChBA,KACC,aACA8N,IAAA,IAAC,QAAE1G,EAAO,QAAEC,EAAO,KAAER,EAAI,EAAEG,EAAC,EAAEC,GAAG6G,EAAA,mBAAAyM,OAClBnT,EAAO,MAAAmT,OAAKlT,EAAO,YAAY,EAAC,QAEhD+S,MAAK,SAAAjL,EAAiCjN,GAAI,IAA3B,KAAE2D,EAAI,OAAEa,EAAM,IAAES,GAAKgI,EACnC,MAAMnK,EAAIjF,EAAAA,IAAU8S,MAEpB7N,EAAE3E,OAAO,YAAYL,KAAK,YAAY,SAADua,OAA0B,IAAfrW,EAAAA,GAAmB,MACnEc,EAAE3E,OAAO,SAASL,KAAK,YAAY,SAADua,OAAWrW,EAAAA,GAAY,MAEzDc,EAAE3E,OAAO,YACNL,KAAK,QAAS,MACdA,KAAK,QAAS,WAAamH,GAE9BnC,EAAEyU,UAAU,QAAQW,MAAK,SAAU5Q,EAAGtH,GACpC,IAAI0Y,EAAOpY,KAAK6K,MAAMnL,EAAI,GAGZ,IAFAA,EAAI,IAED0Y,GAAQ,IAEX,IAAVA,EACF7a,EAAAA,IAAU8S,MAAM7S,KAAK,SAAS,GAADua,OAAK,EAAC,MAC1BK,IAAS/U,EAAKxE,OACvBtB,EAAAA,IAAU8S,MAAM7S,KAAK,SAAS,QAE9BD,EAAAA,IAAU8S,MAAM7S,KAAK,SAAS,GAADua,OAAiC,KAA3B,EAAI1U,EAAK+U,GAAQlU,GAAa,KAErE,IAEA,MAAMV,EAAIhB,EAAE3E,OAAO,SAEnB2E,EAAE3E,OAAO,SACNL,KAAK,IAAKgG,EAAE5F,OAAOya,UAAU7T,GAC7BhH,KAAK,IAAKgG,EAAE5F,OAAOya,UAAU5T,GAC7BjH,KAAK,QAASgG,EAAE5F,OAAOya,UAAUtP,OACjCvL,KAAK,SAAUgG,EAAE5F,OAAOya,UAAUpZ,OACvC,IACCwV,GAAG,SAAS,SAAUC,EAAGlR,GACxBxC,GAAWA,EAAQwC,EACrB,IACCiR,GAAG,cAAc,SAAUC,EAAGlR,GACxBjG,EAAAA,IAAU8S,MAAMxS,OAAO,YAAYwb,QAAQ,WAC9C9b,EAAAA,IAAU8S,MAAMxS,OAAO,UAAUL,KAAK,SAAU,UAClDia,GAAWA,EAAQjU,EACrB,IACCiR,GAAG,cAAc,SAAUC,EAAGlR,GACxBjG,EAAAA,IAAU8S,MAAMxS,OAAO,YAAYwb,QAAQ,WAC9C9b,EAAAA,IAAU8S,MAAMxS,OAAO,UAAUL,KAAK,SAAU,eAClDka,GAAaA,EAAUlU,EACzB,IACC6T,aACAiB,MAAMd,GACN5X,SAAS,KACTpC,KACC,aACAya,IAAA,IAAC,QAAErT,EAAO,QAAEC,EAAO,KAAER,EAAI,EAAEG,EAAC,EAAEC,GAAGwT,EAAA,mBAAAF,OAClBnT,EAAc,GAAJJ,EAAO,MAAAuT,OAAKlT,EAAc,GAAJJ,EAAO,YAAY,EAAC,OAEzE,C,kJCnNe,SAAS5D,IACtB,MAAM,WACJhF,EAAU,MACVQ,EAAK,SACLC,EAAQ,OACRoB,EAAM,OACN0B,EAAM,oBACN1C,EAAmB,iBACnBD,EAAgB,yBAChBM,IACEqZ,EAAAA,EAAAA,YAAW/V,EAAAA,IAERiZ,EAAcC,IAAmB5c,EAAAA,EAAAA,UAAS,KAEjDM,EAAAA,EAAAA,YACE,WACE,IAAIiR,EAAAA,EAAAA,IAAQ7R,EAAO,YAAa,CAC9B,MAAM,mBAAEyc,EAAqB,KAAQzc,EACrC4I,QAAQC,KAAK,WACbjH,EAAAA,GAAUoT,KAAK7S,EAAAA,IACfyG,QAAQG,QAAQ,WAEhB,MAAMoU,GAAWrb,EAAAA,EAAAA,IAAeT,EAAOiX,aAAavW,GAEpDH,EAAAA,GAAUwU,iBAAiB,GAC3BxU,EAAAA,GAAUC,wBAAwBsb,GAElC,MAAM3Z,EAAItC,EAAAA,KAAUuC,IACPE,KAAKC,IAAI,EAAGH,GAAWgZ,EAAqB,KAI7C,GACRjZ,EAAEM,MACJ,IAGImX,EAAY/Z,EAAAA,IAAU,eAAeM,OAAO,eA0H1D,SACEyZ,EACAzb,EAAUyG,GAET,IADD,QAAEtB,EAAO,QAAEyW,EAAO,UAAEC,GAAWpV,EAE/B2C,QAAQ0B,IAAI,gBACZ2Q,EACGL,UAAU,cACVC,KAAKrb,EAAWmJ,QAChBmS,MAAMQ,GACEA,EACJla,OAAO,KACPD,KAAK,QAAS,aACdoa,MAAK,SAAUpU,GACJjG,EAAAA,IAAU8S,MAElB5S,OAAO,KACND,KAAK,QAAS,WACdC,OAAO,UACPD,KAAK,OAAQ,eACbA,KAAK,SAAU,eACfA,KAAK,mBAAoB,GACzBA,KAAK,eAAgB,GACrBA,KAAK,gBAAiB,sBACtBA,KAAK,IAAK,EACf,MAEHoa,MAAK,SAAUpU,GACdjG,EAAAA,IAAU8S,MACPxS,OAAO,YACPL,KAAK,QAAS,MACdA,KAAK,QAAS,WAAagG,EAAEmB,IAClC,IACCnH,KAAK,UAAW,WAChBA,KACC,aACAkF,IAAA,IAAC,EAAE8B,EAAC,EAAEC,EAAC,OAAExF,GAAQyD,EAAA,mBAAAqV,OACFvT,EAAC,MAAAuT,OAAKtT,EAAa,IAATxF,EAAa,YAAA8Y,OAClC9Y,EAAS8I,EAAAA,GAAuB,QAGrC0M,GAAG,SAAS,SAAUC,EAAGlR,GACxBxC,GAAWA,EAAQwC,EACrB,IACCiR,GAAG,cAAc,SAAUC,EAAGlR,GACxBjG,EAAAA,IAAU8S,MAAMxS,OAAO,YAAYwb,QAAQ,WAC9C9b,EAAAA,IAAU8S,MAAMxS,OAAO,UAAUL,KAAK,SAAU,UAClDia,GAAWA,EAAQjU,EACrB,IACCiR,GAAG,cAAc,SAAUC,EAAGlR,GACxBjG,EAAAA,IAAU8S,MAAMxS,OAAO,YAAYwb,QAAQ,WAC9C9b,EAAAA,IAAU8S,MAAMxS,OAAO,UAAUL,KAAK,SAAU,eAClDka,GAAaA,EAAUlU,EACzB,GACJ,CA9KQiW,CAAmBnC,EAAWzb,EAAY,CACxCmF,QAAUwC,IACR+V,GAAiBG,IACf,MAAMC,EAAQD,EAAGE,WAAWF,GAAOA,EAAG/U,MAAQnB,EAAEmB,MAMhD,OALe,IAAXgV,EACFD,EAAGG,OAAOF,EAAO,GAEjBD,EAAG5U,KAAKtB,GAEH,IAAIkW,EAAG,IAGhBhd,GAAqBgd,IACfA,EAAGf,SAASnV,EAAEmB,MAChB+U,EAAGG,OAAOH,EAAGI,QAAQtW,EAAEmB,KAAM,GAC7B2S,EAAUzZ,OAAO,YAAc2F,EAAEmB,KAAK0U,QAAQ,UAAU,KAExDK,EAAG5U,KAAKtB,EAAEmB,KACV2S,EAAUzZ,OAAO,YAAc2F,EAAEmB,KAAK0U,QAAQ,UAAU,IAEnD,IAAIK,KACX,IAIN,IAAK,MAAMA,KAAMJ,EACfhC,EAAUzZ,OAAO,YAAc6b,EAAG/U,KAAK0U,QAAQ,UAAU,GAG3D,MAAO,KACL9b,EAAAA,IAAU,eACPM,OAAO,cACPoZ,UAAU,cACVzZ,KAAK,UAAW,OAAO,CAE9B,CACF,GACA,CAACnB,IAGH,MAAM0d,GAAcrb,EAAAA,EAAAA,cAAY,KAC9B,GAA2B,GAAvB4a,EAAaza,OAAa,CAC5B,MAAM2E,EAAI8V,EAAa,IAEjB,MAAEna,EAAK,SAAES,GAAaR,EAC1B,CAACoE,EAAEgB,EAAGhB,EAAEiB,EAAe,IAAXjB,EAAEvE,OAAevB,EAAOwB,kBAA6B,EAAXsE,EAAEvE,UACxD,KACElC,GAAyB,EAAM,IAInCoC,IAEA7C,EAAS,CAAED,MAAO,cAAeyc,mBAAoBlZ,IAErD,MAAM4Z,GAAWrb,EAAAA,EAAAA,IAAeT,EAAOiX,aAAavW,GACpDrB,GAAyB,GAEzB,MAAM8C,EAAItC,EAAAA,KAAUuC,IAClB,MAAMC,EAAKC,KAAKC,IAAI,EAAGH,GAAWF,EAAW,IAE7C3B,EAAAA,GAAUwU,iBAAiB,EAAI1S,GAC/B9B,EAAAA,GAAUC,wBAAwBsb,GAAY,EAAIzZ,IAE9CA,GAAM,IACRF,EAAEM,OACFlC,EAAAA,GAAUsT,OAAO/S,EAAAA,IACnB,GAEJ,MAAO,GAAI8a,EAAaza,OAAS,EAAG,CAClC,MAAM2K,EAAS8P,EAAatX,KAAKyB,GAAM,CAACA,EAAEe,EAAGf,EAAEgB,KACzCoU,EAAW,CACftb,EAAAA,IAAQiM,GAASwQ,GAAMA,EAAE,KACzBzc,EAAAA,IAAQiM,GAASwQ,GAAMA,EAAE,OAErB,MAAE7a,EAAK,SAAES,GAAaR,EAC1B,CACEyZ,EAAS,GACTA,EAAS,GACTnb,EAAOwB,kBAAgD,EAA9BrD,EAAWmJ,OAAO,GAAG/F,OAAa,KAE7D,KACElC,GAAyB,EAAM,IAInCoC,IAEA7C,EAAS,CACPD,MAAO,cACPyc,mBAAoBlZ,EACpBiZ,aAGF,MAAMW,GAAWrb,EAAAA,EAAAA,IAAeT,EAAOiX,aAAavW,GACpDrB,GAAyB,GAEzB,MAAM8C,EAAItC,EAAAA,KAAUuC,IAClB,MAAMC,EAAKC,KAAKC,IAAI,EAAGH,GAAWF,EAAW,IAE7C3B,EAAAA,GAAUwU,iBAAiB,EAAI1S,GAC/B9B,EAAAA,GAAUC,wBAAwBsb,GAAY,EAAIzZ,IAE9CA,GAAM,IACRF,EAAEM,OAEFlC,EAAAA,GAAUsT,OAAO/S,EAAAA,IACnB,GAEJ,IACC,CAAC8a,IAEJ,IAAIpL,EAAAA,EAAAA,IAAQ7R,EAAO,aAAeI,EAAiBoC,OACjD,OACE8B,EAAAA,EAAAA,KAAA,UAAQK,QAAS+Y,EAAarZ,UAAU,uBAAsBD,SAChC,GAA3BhE,EAAiBoC,OAAc,aAAe,cAGvD,C","sources":["App.jsx","AppContext.jsx","bucket-lib/utils.js","data/objectives-data.jsx","settings.jsx","three-resources.jsx","utils/data-utils.jsx","utils/math-utils.jsx","utils/misc-utils.jsx","utils/render-utils.jsx","views/CompareView.jsx","views/ExamineView.jsx","views/WideView.jsx"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport * as THREE from \"three\";\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\nimport {\r\n  LOD_2_LARGE_DROP_PAD_FACTOR,\r\n  LOD_2_LEVELS,\r\n  LOD_2_MIN_LEV_VAL,\r\n  LOD_2_RAD_PX,\r\n  LOD_2_SMALL_DROP_PAD_FACTOR,\r\n} from \"settings\";\r\n\r\nimport { AppContext } from \"AppContext\";\r\n\r\nimport {\r\n  DATA_GROUPINGS,\r\n  FLATTENED_DATA,\r\n  MAX_DELIVS,\r\n  OBJECTIVES_DATA,\r\n  OBJECTIVE_IDS,\r\n  SCENARIO_IDS,\r\n} from \"data/objectives-data\";\r\n\r\nimport {\r\n  calcDomLev,\r\n  createInterps,\r\n  createInterpsFromDelivs,\r\n} from \"utils/data-utils\";\r\nimport { placeDropsUsingPhysics, toRadians } from \"utils/math-utils\";\r\nimport { mapBy, useStateRef } from \"utils/misc-utils\";\r\n\r\nimport WideView from \"views/WideView\";\r\nimport ExamineView from \"views/ExamineView\";\r\nimport CompareView from \"views/CompareView\";\r\n\r\nimport {\r\n  scene,\r\n  camera,\r\n  renderer,\r\n  dropsMesh,\r\n  pointsMesh,\r\n  getOutlineOpac,\r\n} from \"three-resources\";\r\n\r\n// pre-calculate these so we don't lag later\r\nconst waterdrops = initWaterdrops(\"objective\");\r\n\r\nconst appWidth = window.innerWidth,\r\n  appHeight = window.innerHeight;\r\n\r\nrenderer.setSize(appWidth, appHeight);\r\n\r\nconsole.time(\"drops mesh creating\");\r\ndropsMesh.createMesh(waterdrops);\r\nconsole.timeEnd(\"drops mesh creating\");\r\n\r\n// pointsMesh.createMesh(waterdrops);\r\n\r\nexport default function App() {\r\n  const [state, setState, stateRef] = useStateRef({});\r\n  const [activeWaterdrops, setActiveWaterdrops] = useState([]);\r\n  const [goBack, setGoBack] = useState(null);\r\n  const [\r\n    disableCamAdjustments,\r\n    setDisableCamAdjustments,\r\n    disableCamAdjustmentsRef,\r\n  ] = useStateRef(false);\r\n\r\n  useEffect(function initialize() {\r\n    document.querySelector(\"#mosaic-webgl\").appendChild(renderer.domElement);\r\n\r\n    d3.select(\"#mosaic-svg\")\r\n      .attr(\"width\", appWidth)\r\n      .attr(\"height\", appHeight)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-trans\");\r\n\r\n    camera.mount(\r\n      d3.select(\".bubbles-wrapper\").node(),\r\n      d3.select(\"#mosaic-svg\").select(\".svg-trans\").node()\r\n    );\r\n    camera.setZoomFn((transform) => {\r\n      if (!disableCamAdjustmentsRef.current) {\r\n        dropsMesh.updateOutlineVisibility(getOutlineOpac(transform.k));\r\n      }\r\n    });\r\n    camera.setSize(appWidth, appHeight);\r\n\r\n    renderer.setAnimationLoop(() => {\r\n      renderer.render(scene, camera.camera);\r\n    });\r\n\r\n    resetCamera(false);\r\n    setState({ state: \"WideView\" });\r\n  }, []);\r\n\r\n  const resetCamera = useCallback((animated = true, callback) => {\r\n    const pos = [\r\n      0,\r\n      -waterdrops.height * 0.08,\r\n      camera.getZFromFarHeight(waterdrops.height),\r\n    ];\r\n    if (animated) {\r\n      const { start } = zoomTo(pos, callback);\r\n      start();\r\n    } else {\r\n      camera.callZoomFromWorldViewport({\r\n        worldX: pos[0],\r\n        worldY: -pos[1],\r\n        farHeight: waterdrops.height,\r\n      });\r\n      callback && callback();\r\n    }\r\n  }, []);\r\n\r\n  const zoomTo = useCallback((xyz, callback) => {\r\n    const i = camera.interpolateZoomCamera(xyz);\r\n\r\n    const duration = i.duration / 2;\r\n\r\n    const start = () => {\r\n      const t = d3.timer((elapsed) => {\r\n        const et = Math.min(elapsed / duration, 1);\r\n        camera.callZoom(i(et));\r\n\r\n        if (et === 1) {\r\n          t.stop();\r\n          callback && callback();\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      start,\r\n      duration,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        appWidth,\r\n        appHeight,\r\n        state,\r\n        setState,\r\n        activeWaterdrops,\r\n        setActiveWaterdrops,\r\n        setDisableCamAdjustments,\r\n        waterdrops,\r\n        scene,\r\n        camera,\r\n        renderer,\r\n        pointsMesh,\r\n        dropsMesh,\r\n        setGoBack,\r\n        zoomTo,\r\n        resetCamera,\r\n      }}\r\n    >\r\n      <div className=\"bubbles-wrapper\">\r\n        <div id=\"mosaic-webgl\"></div>\r\n        <svg id=\"mosaic-svg\"></svg>\r\n      </div>\r\n      <WideView />\r\n      <ExamineView />\r\n      <CompareView />\r\n      {goBack && (\r\n        <button className=\"go-back-btn\" onClick={goBack}>\r\n          ←\r\n        </button>\r\n      )}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\n// TODO optimize!!\r\nfunction initWaterdrops(grouping) {\r\n  const groupKeys = grouping === \"objective\" ? OBJECTIVE_IDS : SCENARIO_IDS;\r\n  const memberKeys = grouping === \"objective\" ? SCENARIO_IDS : OBJECTIVE_IDS;\r\n\r\n  const amtGroups = groupKeys.length;\r\n  const amtPerGroup = memberKeys.length;\r\n\r\n  const largeDropRad =\r\n    Math.sqrt(amtPerGroup / Math.PI) *\r\n    LOD_2_RAD_PX *\r\n    2 *\r\n    LOD_2_SMALL_DROP_PAD_FACTOR *\r\n    LOD_2_LARGE_DROP_PAD_FACTOR;\r\n  const smallDropRad = LOD_2_RAD_PX * LOD_2_SMALL_DROP_PAD_FACTOR;\r\n\r\n  const largeNodesPhys = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    groupKeys.map((p, idx) => ({\r\n      r: largeDropRad,\r\n      id: idx,\r\n    }))\r\n  );\r\n\r\n  const largeNodesPos = mapBy(largeNodesPhys, ({ id }) => id);\r\n\r\n  const smallNodesPhys = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    memberKeys.map((s, idx) => ({\r\n      r: smallDropRad,\r\n      id: idx,\r\n    }))\r\n  );\r\n\r\n  const smallNodesPos = mapBy(smallNodesPhys, ({ id }) => id);\r\n\r\n  const nodes = [];\r\n  const groupNodes = [];\r\n\r\n  const groupToNodes = {};\r\n\r\n  let idx = 0;\r\n\r\n  for (const nodeData of FLATTENED_DATA) {\r\n    const { id, objective, scenario, deliveries } = nodeData;\r\n\r\n    const i = createInterpsFromDelivs(deliveries, MAX_DELIVS);\r\n    const wds = ticksExact(0, 1, LOD_2_LEVELS + 1).map((d) => i(d));\r\n\r\n    const levs = wds.map(\r\n      (w, i) => Math.max(w, i == 0 ? LOD_2_MIN_LEV_VAL : 0) * LOD_2_RAD_PX\r\n    );\r\n\r\n    const groupID = grouping === \"objective\" ? objective : scenario;\r\n    const memberID = grouping === \"objective\" ? scenario : objective;\r\n\r\n    const groupRank = DATA_GROUPINGS[grouping][groupID].rank;\r\n    const memberRank = DATA_GROUPINGS[grouping][groupID][id];\r\n\r\n    const node = {\r\n      id,\r\n      levs,\r\n      maxLev: LOD_2_RAD_PX,\r\n      domLev: calcDomLev(levs),\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 100 + 400,\r\n      x: smallNodesPos[memberRank].x,\r\n      y: smallNodesPos[memberRank].y,\r\n      group: groupID,\r\n      key: memberID,\r\n      globalX: largeNodesPos[groupRank].x + smallNodesPos[memberRank].x,\r\n      globalY: largeNodesPos[groupRank].y + smallNodesPos[memberRank].y,\r\n    };\r\n\r\n    nodes.push(node);\r\n\r\n    if (!groupToNodes[groupID]) groupToNodes[groupID] = [];\r\n\r\n    groupToNodes[groupID].push(node);\r\n  }\r\n\r\n  for (const groupKey of groupKeys) {\r\n    groupNodes.push({\r\n      x: largeNodesPos[DATA_GROUPINGS[grouping][groupKey].rank].x,\r\n      y: largeNodesPos[DATA_GROUPINGS[grouping][groupKey].rank].y,\r\n      tilt: Math.random() * 50 - 25,\r\n      key: groupKey,\r\n      height: smallNodesPhys.height,\r\n      nodes: groupToNodes[groupKey],\r\n    });\r\n  }\r\n\r\n  return {\r\n    nodes: nodes,\r\n    groups: groupNodes,\r\n    height: largeNodesPhys.height,\r\n  };\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext({});\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import * as d3 from \"d3\";\r\n\r\nimport { clamp } from \"utils/math-utils\";\r\nimport { mapBy } from \"utils/misc-utils\";\r\n\r\nconst SCEN_DIVISOR = 1; // debugging purposes, don't render all scenarios to speed things up\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const OBJECTIVES_DATA = await (async function load() {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) => clamp(v, 0, MAX_DELIVS));\r\n\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const OBJECTIVE_IDS = Object.keys(OBJECTIVES_DATA);\r\n\r\nconst _SCENARIO_IDS = Object.keys(\r\n  Object.values(OBJECTIVES_DATA)[0][SCENARIO_KEY_STRING]\r\n);\r\n\r\nexport const SCENARIO_IDS = _SCENARIO_IDS.filter(\r\n  (_, i) => i % SCEN_DIVISOR === 0\r\n);\r\n\r\n// Flattening hierarchical data makes it more flexible for classifying\r\n// (from experience). id conveniently corresponds to index.\r\n// Also cache classifications (by objective and by scenario, for now)\r\nexport const [FLATTENED_DATA, DATA_GROUPINGS] = (function preprocessData() {\r\n  const flattenedData = [];\r\n  const dataGroupings = {\r\n    objective: {},\r\n    scenario: {},\r\n  };\r\n\r\n  // for ordering later\r\n  const means = [];\r\n\r\n  let idx = 0;\r\n  for (const obj of OBJECTIVE_IDS) {\r\n    for (const scen of SCENARIO_IDS) {\r\n      if (!dataGroupings[\"objective\"][obj])\r\n        dataGroupings[\"objective\"][obj] = [];\r\n\r\n      if (!dataGroupings[\"scenario\"][scen])\r\n        dataGroupings[\"scenario\"][scen] = [];\r\n\r\n      dataGroupings[\"objective\"][obj].push(idx);\r\n      dataGroupings[\"scenario\"][scen].push(idx);\r\n\r\n      const deliveries =\r\n        OBJECTIVES_DATA[obj][SCENARIO_KEY_STRING][scen][DELIV_KEY_STRING];\r\n\r\n      flattenedData.push({\r\n        id: idx,\r\n        objective: obj,\r\n        scenario: scen,\r\n        deliveries,\r\n      });\r\n\r\n      means.push(d3.mean(deliveries));\r\n\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  const orderedDataGroupings = {};\r\n\r\n  for (const criteria of Object.keys(dataGroupings)) {\r\n    const asdfasdf = [];\r\n    for (const key of Object.keys(dataGroupings[criteria])) {\r\n      const ids = dataGroupings[criteria][key];\r\n      const sortedObjScens = ids.sort((a, b) => means[b] - means[a]);\r\n      asdfasdf.push({\r\n        key,\r\n        sorted: sortedObjScens,\r\n        mean: d3.mean(ids.map((id) => flattenedData[id].deliveries).flat()),\r\n      });\r\n    }\r\n\r\n    const sortedObjScens = asdfasdf.sort((a, b) => b.mean - a.mean);\r\n\r\n    orderedDataGroupings[criteria] = {};\r\n\r\n    for (let i = 0; i < sortedObjScens.length; i++) {\r\n      const { key, sorted } = sortedObjScens[i];\r\n      const IDtoRank = {};\r\n\r\n      for (let j = 0; j < sorted.length; j++) {\r\n        IDtoRank[sorted[j]] = j;\r\n      }\r\n      orderedDataGroupings[criteria][key] = IDtoRank;\r\n      orderedDataGroupings[criteria][key].rank = i;\r\n    }\r\n  }\r\n\r\n  return [flattenedData, orderedDataGroupings];\r\n})();\r\n","export const LOD_1_LEVELS = 5;\r\n\r\nexport const LOD_2_LEVELS = 5;\r\nexport const LOD_2_RAD_PX = 1;\r\nexport const LOD_2_MIN_LEV_VAL = 0.1;\r\nexport const LOD_2_SMALL_DROP_PAD_FACTOR = 2;\r\nexport const LOD_2_LARGE_DROP_PAD_FACTOR = 1.2;\r\n\r\nexport const GROUP_HOVER_AREA_FACTOR = 1.1 / (1 + Math.SQRT1_2);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\n\r\nimport {\r\n  WaterdropMesh,\r\n  WaterdropSimplifiedMesh,\r\n  Camera,\r\n} from \"utils/render-utils\";\r\n\r\nconst scene = (function getScene() {\r\n  const s = new THREE.Scene();\r\n  s.background = new THREE.Color(0xefefef);\r\n  return s;\r\n})();\r\n\r\nconst dropsMesh = new WaterdropMesh();\r\nconst pointsMesh = new WaterdropSimplifiedMesh();\r\n\r\nconst camera = new Camera({\r\n  fov: 45,\r\n  near: 1,\r\n  far: 3000,\r\n});\r\n\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\nconst getOutlineOpac = d3\r\n  .scaleLinear()\r\n  .domain([1, 5])\r\n  .range([0.1, 1])\r\n  .clamp(true);\r\n\r\nexport { scene, camera, renderer, dropsMesh, pointsMesh, getOutlineOpac };\r\n","import * as d3 from \"d3\";\r\n\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\n\r\nimport { SCENARIO_KEY_STRING, DELIV_KEY_STRING } from \"data/objectives-data\";\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function createInterpsFromDelivs(delivs, maxDelivs) {\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\n// TODO fix colors\r\nexport function calcDomLev(levs) {\r\n  levs = [1, ...levs, 0];\r\n\r\n  let mean = 0;\r\n  for (let i = 0; i < levs.length - 1; i++) {\r\n    const dif = levs[i] - levs[i + 1];\r\n    mean += (dif * (i - 1)) / (levs.length + 4);\r\n  }\r\n\r\n  return mean;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { CIRC_RAD, DROP_HEIGHT } from \"./render-utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return clamp(\r\n    (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326,\r\n    0,\r\n    1\r\n  );\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport function interp(x, a, b) {\r\n  return x * (b - a) + a;\r\n}\r\n\r\nexport function revInterp(t, a, b) {\r\n  return (t - a) / (b - a);\r\n}\r\n","// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    if (typeof v === \"function\")\r\n      _setState((curVal) => (stateRef.current = v(curVal)));\r\n    else _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n\r\nexport function isState(stateInfo, stateName) {\r\n  return stateInfo && stateInfo.state === stateName;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { interpolateWatercolorBlue } from \"bucket-lib/utils\";\r\nimport { LOD_2_RAD_PX } from \"settings\";\r\nimport { LOD_2_LEVELS } from \"settings\";\r\nimport { sortBy } from \"./misc-utils\";\r\nimport { toRadians } from \"./math-utils\";\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport const CIRC_RAD = Math.SQRT1_2;\r\nexport const DROP_RAD = 1;\r\nexport const CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nexport const DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return {\r\n    x: (mouseX / width) * 2 - 1,\r\n    y: -(mouseY / height) * 2 + 1,\r\n  };\r\n}\r\n\r\nclass MeshGeometry {\r\n  threeGeom = new THREE.BufferGeometry();\r\n  triangleIdx = 0;\r\n  positionAttribute;\r\n  colorAttribute;\r\n\r\n  constructor(numPoints, color = true) {\r\n    this.threeGeom.setAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(numPoints * 3), 3)\r\n    );\r\n\r\n    if (color)\r\n      this.threeGeom.setAttribute(\r\n        \"color\",\r\n        new THREE.BufferAttribute(new Float32Array(numPoints * 3), 3)\r\n      );\r\n\r\n    this.positionAttribute = this.threeGeom.getAttribute(\"position\");\r\n    this.colorAttribute = this.threeGeom.getAttribute(\"color\");\r\n  }\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      this.positionAttribute.setXYZ(\r\n        this.triangleIdx * 3 + 0,\r\n        transform.x + v1[0],\r\n        transform.y - v1[1],\r\n        z\r\n      );\r\n\r\n      this.positionAttribute.setXYZ(\r\n        this.triangleIdx * 3 + 1,\r\n        transform.x + v2[0],\r\n        transform.y - v2[1],\r\n        z\r\n      );\r\n\r\n      this.positionAttribute.setXYZ(\r\n        this.triangleIdx * 3 + 2,\r\n        transform.x + v3[0],\r\n        transform.y - v3[1],\r\n        z\r\n      );\r\n\r\n      if (color) {\r\n        this.colorAttribute.setXYZ(\r\n          this.triangleIdx * 3 + 0,\r\n          color.r,\r\n          color.g,\r\n          color.b\r\n        );\r\n        this.colorAttribute.setXYZ(\r\n          this.triangleIdx * 3 + 1,\r\n          color.r,\r\n          color.g,\r\n          color.b\r\n        );\r\n        this.colorAttribute.setXYZ(\r\n          this.triangleIdx * 3 + 2,\r\n          color.r,\r\n          color.g,\r\n          color.b\r\n        );\r\n      }\r\n\r\n      this.triangleIdx++;\r\n    }\r\n  }\r\n\r\n  finish() {\r\n    this.threeGeom.setDrawRange(0, this.triangleIdx * 3);\r\n  }\r\n}\r\n\r\nexport class WaterdropMesh {\r\n  static MAX_POINTS_DROPS = 60 * 13e4; // approx num verts per droplet * approx num droplets on screen\r\n  static MAX_POINTS_OUTLINE = 40 * 13e4; // approx num verts per droplet * approx num droplets on screen\r\n\r\n  dropsMesh;\r\n  outlineMesh;\r\n\r\n  added = false;\r\n\r\n  createMesh(waterdrops) {\r\n    if (!this.dropsMesh) {\r\n      this.initializeMeshes(waterdrops);\r\n    } else {\r\n      this.updateMeshes(waterdrops);\r\n    }\r\n  }\r\n\r\n  draw(scene) {\r\n    if (!this.added) {\r\n      scene.add(this.dropsMesh);\r\n      scene.add(this.outlineMesh);\r\n      this.added = true;\r\n    }\r\n  }\r\n\r\n  remove(scene) {\r\n    if (this.added) {\r\n      scene.remove(this.dropsMesh);\r\n      scene.remove(this.outlineMesh);\r\n      this.added = false;\r\n    }\r\n  }\r\n\r\n  initializeMeshes(waterdrops) {\r\n    const dropsGeometry = new MeshGeometry(WaterdropMesh.MAX_POINTS_DROPS);\r\n    const outlinePoints = [];\r\n\r\n    const outlineMeshCoords = waterdropDeltaOutline(\r\n      0,\r\n      1,\r\n      LOD_2_RAD_PX * 2 * 0.975\r\n    );\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: x, globalY: y, levs, maxLev } = waterdrops.nodes[i];\r\n\r\n      for (let k = levs.length - 1; k >= 0; k--) {\r\n        const l1 = k !== levs.length - 1 ? levs[k + 1] : 0;\r\n        const l2 = levs[k];\r\n\r\n        const meshCoords = waterdropDelta(\r\n          l1 / maxLev,\r\n          l2 / maxLev,\r\n          LOD_2_RAD_PX * 2\r\n        );\r\n        const color = new THREE.Color(\r\n          interpolateWatercolorBlue(k / LOD_2_LEVELS)\r\n        );\r\n\r\n        dropsGeometry.addMeshCoords(\r\n          meshCoords,\r\n          { x: x, y: -y },\r\n          color,\r\n          (i % 5) / 50 + 0.02\r\n        );\r\n      }\r\n\r\n      outlinePoints.push(\r\n        ...outlineMeshCoords.map(\r\n          ([dx, dy]) => new THREE.Vector3(x + dx, -y - dy, (i % 5) / 50 + 0.01)\r\n        )\r\n      );\r\n    }\r\n\r\n    dropsGeometry.finish();\r\n\r\n    this.dropsMesh = new THREE.Mesh(\r\n      dropsGeometry.threeGeom,\r\n      new THREE.MeshBasicMaterial({\r\n        vertexColors: true,\r\n        transparent: true,\r\n        opacity: 1,\r\n      })\r\n    );\r\n\r\n    this.outlineMesh = new THREE.LineSegments(\r\n      new THREE.BufferGeometry().setFromPoints(outlinePoints),\r\n      new THREE.LineBasicMaterial({\r\n        color: 0xcccccc,\r\n        transparent: true,\r\n        opacity: 0,\r\n      })\r\n    );\r\n  }\r\n\r\n  updateOutlineVisibility(opac) {\r\n    if (!this.outlineMesh) return;\r\n    this.outlineMesh.material.opacity = opac;\r\n    this.outlineMesh.material.needsUpdate = true;\r\n  }\r\n\r\n  updateVisibility(opac) {\r\n    if (!this.outlineMesh || !this.dropsMesh) return;\r\n    this.outlineMesh.material.opacity = opac;\r\n    this.outlineMesh.material.needsUpdate = true;\r\n    this.dropsMesh.material.opacity = opac;\r\n    this.dropsMesh.material.needsUpdate = true;\r\n  }\r\n\r\n  updateMeshes(waterdrops) {\r\n    // TODO fix\r\n  }\r\n}\r\n\r\nexport class WaterdropSimplifiedMesh {\r\n  mesh;\r\n  added = false;\r\n\r\n  vertToId = {};\r\n  idToVert = {};\r\n\r\n  draw(scene) {\r\n    if (!this.added) {\r\n      scene.add(this.mesh);\r\n      this.added = true;\r\n    }\r\n  }\r\n\r\n  remove(scene) {\r\n    if (this.added) {\r\n      scene.remove(this.mesh);\r\n      this.added = false;\r\n    }\r\n  }\r\n\r\n  createMesh(waterdrops) {\r\n    if (!this.mesh) {\r\n      this.initializeMesh(waterdrops);\r\n    }\r\n\r\n    this.updateMesh(waterdrops);\r\n\r\n    return this.mesh;\r\n  }\r\n\r\n  initializeMesh(waterdrops) {\r\n    const pointsGeometry = new THREE.BufferGeometry();\r\n\r\n    const vertices = [];\r\n    const colors = [];\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: x, globalY: y, levs, domLev } = waterdrops.nodes[i];\r\n\r\n      const color = domLev > 0 ? interpolateWatercolorBlue(domLev) : \"white\";\r\n\r\n      vertices.push(x, -y, 0);\r\n      const t_color = new THREE.Color(color);\r\n      colors.push(t_color.r, t_color.g, t_color.b);\r\n\r\n      this.vertToId[i] = id;\r\n      this.idToVert[id] = i;\r\n    }\r\n\r\n    const pointsMaterial = new THREE.PointsMaterial({\r\n      size: LOD_2_RAD_PX * 2,\r\n      sizeAttenuation: true,\r\n      vertexColors: true,\r\n      map: new THREE.TextureLoader().load(\"drop.png\"),\r\n      transparent: true,\r\n    });\r\n\r\n    pointsGeometry.setAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(vertices), 3)\r\n    );\r\n\r\n    pointsGeometry.setAttribute(\r\n      \"color\",\r\n      new THREE.BufferAttribute(new Float32Array(colors), 3)\r\n    );\r\n\r\n    this.mesh = new THREE.Points(pointsGeometry, pointsMaterial);\r\n  }\r\n\r\n  updateMesh(waterdrops) {\r\n    const positionAttr = this.mesh.geometry.getAttribute(\"position\");\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: newX, globalY: newY } = waterdrops.nodes[i];\r\n      const idx = this.idToVert[id];\r\n      positionAttr.setXY(idx, newX, -newY);\r\n    }\r\n    positionAttr.needsUpdate = true;\r\n  }\r\n\r\n  updatePoints(waterdrops, translations, dt) {\r\n    const verts = this.mesh.geometry.vertices;\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id } = waterdrops.nodes[i];\r\n      const idx = this.idToVert[id];\r\n\r\n      const [dx, dy] = translations[id];\r\n\r\n      const x = verts[idx].x;\r\n      const y = verts[idx].y;\r\n\r\n      verts[idx].setX(x + dt * dx);\r\n      verts[idx].setY(y - dt * dy);\r\n    }\r\n\r\n    this.mesh.geometry.verticesNeedUpdate = true;\r\n  }\r\n\r\n  intersectObject(camera, x, y) {\r\n    const intersects = camera.intersectObject(x, y, this.mesh);\r\n\r\n    if (intersects[0]) {\r\n      const intersect = sortBy(intersects, \"distanceToRay\")[0];\r\n      return this.vertToId[intersect.index];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  raycaster = new THREE.Raycaster();\r\n\r\n  _svgElement;\r\n\r\n  constructor({ fov, near, far }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n  }\r\n\r\n  setZoomFn(zoomFn) {\r\n    this.zoom = d3.zoom().on(\"zoom\", (e) => {\r\n      this.curTransform = e.transform;\r\n\r\n      this._THREEZoomHandler(e.transform);\r\n      d3.select(this._svgElement).attr(\"transform\", e.transform);\r\n\r\n      zoomFn && zoomFn(e.transform);\r\n    });\r\n  }\r\n\r\n  callZoom(transform) {\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity.translate(transform.x, transform.y).scale(transform.k)\r\n    );\r\n  }\r\n\r\n  callZoomFromWorldViewport({ worldX, worldY, farHeight }) {\r\n    const k = this.height / farHeight;\r\n\r\n    const x = -(worldX * k) + this.width / 2;\r\n    const y = worldY * k + this.height / 2;\r\n\r\n    this.callZoom({\r\n      x,\r\n      y,\r\n      k,\r\n    });\r\n  }\r\n\r\n  getZFromFarHeight(farHeight) {\r\n    return (Math.tan(toRadians(90 - this.fov / 2)) * farHeight) / 2;\r\n  }\r\n\r\n  getFarHeightFromZ(z) {\r\n    return Math.tan(toRadians(this.fov) / 2) * z * 2;\r\n  }\r\n\r\n  interpolateZoomCamera([endx, endy, endz]) {\r\n    const i = d3.interpolateZoom(\r\n      [\r\n        this.camera.position.x,\r\n        this.camera.position.y,\r\n        this.height / this.curTransform.k,\r\n      ],\r\n      [endx, -endy, this.getFarHeightFromZ(endz)]\r\n    );\r\n\r\n    const interper = (t) => {\r\n      const [worldX, worldY, farHeight] = i(t);\r\n\r\n      const k = this.height / farHeight;\r\n\r\n      const x = -(worldX * k) + this.width / 2;\r\n      const y = worldY * k + this.height / 2;\r\n\r\n      return {\r\n        x,\r\n        y,\r\n        k,\r\n      };\r\n    };\r\n\r\n    interper.duration = i.duration;\r\n\r\n    return interper;\r\n  }\r\n\r\n  mount(webglElement, svgElement) {\r\n    this.view = d3.select(webglElement);\r\n    this._svgElement = svgElement;\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.zoom = this.zoom.scaleExtent([\r\n      this.getScaleFromZ(this.far),\r\n      this.getScaleFromZ(this.near),\r\n    ]);\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      this.fov,\r\n      width / height,\r\n      this.near,\r\n      this.far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  _THREEZoomHandler(transform) {\r\n    const scale = transform.k;\r\n    const x = -(transform.x - this.width / 2) / scale;\r\n    const y = (transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n\r\n  intersectObject(mouseX, mouseY, mesh) {\r\n    this.raycaster.setFromCamera(\r\n      {\r\n        x: mouseX,\r\n        y: mouseY,\r\n      },\r\n      this.camera\r\n    );\r\n\r\n    return this.raycaster.intersectObject(mesh);\r\n  }\r\n}\r\n","import { AppContext } from \"AppContext\";\r\nimport { interpolateWatercolorBlue } from \"bucket-lib/utils\";\r\nimport * as d3 from \"d3\";\r\nimport React, { act, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { LOD_2_RAD_PX } from \"settings\";\r\nimport { GROUP_HOVER_AREA_FACTOR } from \"settings\";\r\nimport { LOD_1_LEVELS } from \"settings\";\r\nimport { isState } from \"utils/misc-utils\";\r\nimport { DROPLET_SHAPE } from \"utils/render-utils\";\r\n\r\nexport default function CompareView() {\r\n  const {\r\n    state,\r\n    setState,\r\n    setGoBack,\r\n    camera,\r\n    resetCamera,\r\n    activeWaterdrops,\r\n    waterdrops,\r\n  } = useContext(AppContext);\r\n\r\n  const [activeMinidrop, setActiveMinidrop] = useState();\r\n  const groupsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (activeMinidrop) {\r\n      const positions = [];\r\n      for (let i = 0; i < groupsRef.current.groups.length; i++) {\r\n        const group = groupsRef.current.groups[i];\r\n        const groupPos = groupsRef.current.groupPositions[i];\r\n\r\n        const node = group.nodes.find((n) => n.key === activeMinidrop);\r\n\r\n        positions.push([\r\n          node.x * 1.5 + groupPos[0],\r\n          node.y * 1.5 + groupPos[1],\r\n        ]);\r\n      }\r\n\r\n      const lines = [];\r\n\r\n      const height = LOD_2_RAD_PX * 2;\r\n      for (let i = 0; i < positions.length; i++) {\r\n        const from = Array.from(positions[i]),\r\n          to = Array.from(positions[i + 1 == positions.length ? 0 : i + 1]);\r\n\r\n        const len = Math.sqrt((from[0] - to[0]) ** 2 + (from[1] - to[1]) ** 2);\r\n        const normed = [(to[0] - from[0]) / len, (to[1] - from[1]) / len];\r\n\r\n        from[0] += normed[0] * height;\r\n        from[1] += normed[1] * height;\r\n        to[0] -= normed[0] * height;\r\n        to[1] -= normed[1] * height;\r\n\r\n        lines.push([from, to]);\r\n      }\r\n\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\".compCirclet\")\r\n        .data(positions)\r\n        .join(\"circle\")\r\n        .attr(\"class\", \"compCirclet\")\r\n        .attr(\"display\", \"initial\")\r\n        .style(\"pointer-events\", \"none\")\r\n        .attr(\"fill\", \"transparent\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .attr(\"stroke-dasharray\", 3)\r\n        .attr(\"stroke-width\", 3)\r\n        .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n        .attr(\"r\", (height / 2) * 1.2)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"cx\", (d) => d[0])\r\n        .attr(\"cy\", (d) => d[1] - height * 0.08);\r\n\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\".compLines\")\r\n        .data(lines)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"compLines\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .attr(\"stroke-dasharray\", 3)\r\n        .attr(\"opacity\", 0.5)\r\n        .attr(\"stroke-width\", 1)\r\n        .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"d\", (d) => d3.line()(d));\r\n    }\r\n  }, [activeMinidrop]);\r\n\r\n  useEffect(\r\n    function update() {\r\n      if (isState(state, \"CompareView\")) {\r\n        const container = d3.select(\"#mosaic-svg\").select(\".svg-trans\");\r\n\r\n        updateDropsSVG(\r\n          container,\r\n          (groupsRef.current = getWaterdropGroups(\r\n            activeWaterdrops,\r\n            waterdrops,\r\n            state.avgCoord\r\n          )),\r\n          state.transitionDuration / 5,\r\n          {\r\n            onHover: (d) => {\r\n              setActiveMinidrop(d.key);\r\n            },\r\n          }\r\n        );\r\n\r\n        setGoBack(() => () => {\r\n          setState({ state: \"WideView\" });\r\n\r\n          resetCamera();\r\n        });\r\n\r\n        return () => {\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".compLargeDrop\")\r\n            .remove();\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".compCirclet\")\r\n            .remove();\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".compLines\")\r\n            .remove();\r\n          setGoBack(null);\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n}\r\n\r\nfunction getWaterdropGroups(keyArr, waterdrops, center) {\r\n  const groups = waterdrops.groups.filter((g) => keyArr.includes(g.key));\r\n\r\n  const groupPositions = [];\r\n  const rad = groups[0].height;\r\n\r\n  for (let i = 0, n = groups.length; i < n; i++) {\r\n    groupPositions.push([\r\n      center[0] + Math.cos(((Math.PI * 2) / n) * i) * rad,\r\n      center[1] + Math.sin(((Math.PI * 2) / n) * i) * rad,\r\n    ]);\r\n  }\r\n\r\n  return {\r\n    groups,\r\n    groupPositions,\r\n  };\r\n}\r\n\r\nfunction updateDropsSVG(\r\n  container,\r\n  waterdropGroups,\r\n  transitionDelay,\r\n  { onClick, onHover, onUnhover }\r\n) {\r\n  container\r\n    .selectAll(\".compLargeDrop\")\r\n    .data(waterdropGroups.groups)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"compLargeDrop\")\r\n        .each(function ({ nodes }) {\r\n          d3.select(this)\r\n            .selectAll(\".compSmallDrop\")\r\n            .data(nodes)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"compSmallDrop\")\r\n            .each(function ({ levs }) {\r\n              const s = d3.select(this);\r\n              s.append(\"rect\")\r\n                .attr(\"class\", \"bbox\")\r\n                .style(\"visibility\", \"hidden\");\r\n\r\n              const randId = Math.floor(Math.random() * 1e9);\r\n\r\n              const stops = d3\r\n                .select(this)\r\n                .append(\"defs\")\r\n                .append(\"linearGradient\")\r\n                .attr(\"id\", `${randId}`)\r\n                .attr(\"x1\", \"0%\")\r\n                .attr(\"x2\", \"0%\")\r\n                .attr(\"y1\", \"0%\")\r\n                .attr(\"y2\", \"100%\");\r\n              stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n              stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n\r\n              levs.forEach((_, i) => {\r\n                stops\r\n                  .append(\"stop\")\r\n                  .attr(\r\n                    \"stop-color\",\r\n                    interpolateWatercolorBlue(i / LOD_1_LEVELS)\r\n                  );\r\n                stops\r\n                  .append(\"stop\")\r\n                  .attr(\r\n                    \"stop-color\",\r\n                    interpolateWatercolorBlue(i / LOD_1_LEVELS)\r\n                  );\r\n              });\r\n\r\n              s.append(\"path\")\r\n                .attr(\"d\", DROPLET_SHAPE)\r\n                .attr(\"class\", \"outline\")\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"lightgray\")\r\n                .attr(\"stroke-width\", 0.05);\r\n\r\n              s.append(\"path\")\r\n                .attr(\"class\", \"fill\")\r\n                .attr(\"d\", DROPLET_SHAPE)\r\n                .attr(\"fill\", `url(#${randId})`);\r\n            });\r\n        });\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\"transform\", ({ x, y }, i) => `translate(${x}, ${y})`)\r\n    .each(function ({ nodes }) {\r\n      d3.select(this)\r\n        .selectAll(\".compSmallDrop\")\r\n        .data(nodes)\r\n        .attr(\"display\", \"initial\")\r\n        .attr(\r\n          \"transform\",\r\n          ({ tilt, x, y }) => `translate(${x}, ${y}) rotate(${0})`\r\n        )\r\n        .on(\"click\", function (e, d) {\r\n          onClick && onClick(d);\r\n        })\r\n        .on(\"mouseenter\", function (e, d) {\r\n          onHover && onHover(d);\r\n        })\r\n        .on(\"mouseleave\", function (e, d) {\r\n          onUnhover && onUnhover(d);\r\n        })\r\n        .each(function ({ levs, maxLev, key }, i) {\r\n          const s = d3.select(this);\r\n\r\n          s.select(\".outline\").attr(\r\n            \"transform\",\r\n            `scale(${LOD_2_RAD_PX * 0.95})`\r\n          );\r\n          s.select(\".fill\").attr(\"transform\", `scale(${LOD_2_RAD_PX})`);\r\n\r\n          s.selectAll(\"stop\").each(function (_, i) {\r\n            let actI = Math.floor(i / 2);\r\n            const isEnd = i % 2;\r\n\r\n            if (isEnd === 0) actI -= 1;\r\n\r\n            if (actI === -1) {\r\n              d3.select(this).attr(\"offset\", `${0}%`);\r\n            } else if (actI === levs.length) {\r\n              d3.select(this).attr(\"offset\", `100%`);\r\n            } else {\r\n              d3.select(this).attr(\r\n                \"offset\",\r\n                `${(1 - levs[actI] / maxLev) * 100}%`\r\n              );\r\n            }\r\n          });\r\n\r\n          const d = s.select(\".fill\");\r\n\r\n          s.select(\".bbox\")\r\n            .attr(\"x\", d.node().getBBox().x)\r\n            .attr(\"y\", d.node().getBBox().y)\r\n            .attr(\"width\", d.node().getBBox().width)\r\n            .attr(\"height\", d.node().getBBox().height);\r\n        })\r\n        .transition()\r\n        .delay(transitionDelay)\r\n        .duration(1000)\r\n        .attr(\r\n          \"transform\",\r\n          ({ tilt, x, y }) => `translate(${x * 1.5}, ${y * 1.5}) rotate(${0})`\r\n        );\r\n    })\r\n    .transition()\r\n    .delay(transitionDelay)\r\n    .duration(1000)\r\n    .attr(\r\n      \"transform\",\r\n      (_, i) =>\r\n        `translate(${waterdropGroups.groupPositions[i][0]}, ${waterdropGroups.groupPositions[i][1]})`\r\n    );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { AppContext } from \"AppContext\";\r\n\r\nimport { isState } from \"utils/misc-utils\";\r\nimport { LOD_1_LEVELS } from \"settings\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"bucket-lib/utils\";\r\nimport { DROPLET_SHAPE } from \"utils/render-utils\";\r\nimport { LOD_2_RAD_PX } from \"settings\";\r\nimport { FLATTENED_DATA } from \"data/objectives-data\";\r\n\r\nexport default function ExamineView() {\r\n  const {\r\n    state,\r\n    setState,\r\n    setGoBack,\r\n    camera,\r\n    resetCamera,\r\n    activeWaterdrops,\r\n    waterdrops,\r\n  } = useContext(AppContext);\r\n\r\n  useEffect(function init() {\r\n    // do this now so it won't lag later\r\n    // TODO fix\r\n    // updateSmallDropSVG(\r\n    //   d3.select(\"#mosaic-svg\").select(\".svg-trans\"),\r\n    //   getWaterdrops(\r\n    //     waterdrops.groups[0].nodes.map((n) => n.id),\r\n    //     waterdrops.nodes\r\n    //   ),\r\n    //   0\r\n    // );\r\n  }, []);\r\n\r\n  useEffect(\r\n    function update() {\r\n      if (isState(state, \"ExamineView\")) {\r\n        const transitionDelay = state.transitionDuration;\r\n        const container = d3.select(\"#mosaic-svg\").select(\".svg-trans\");\r\n\r\n        updateSmallDropSVG(\r\n          container,\r\n          getWaterdrops(\r\n            waterdrops.groups\r\n              .find((g) => g.key === activeWaterdrops[0])\r\n              .nodes.map((n) => n.id),\r\n            waterdrops.nodes\r\n          ),\r\n          transitionDelay / 2,\r\n          {}\r\n        );\r\n\r\n        setGoBack(() => () => {\r\n          setState({ state: \"WideView\" });\r\n\r\n          resetCamera();\r\n        });\r\n\r\n        return () => {\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".smallDrop\")\r\n            .attr(\"display\", \"none\");\r\n          setGoBack(null);\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n\r\nfunction getWaterdrops(nodeArr, waterdrops) {\r\n  const wds = [];\r\n\r\n  for (const nodeID of nodeArr) {\r\n    const { id, deliveries } = FLATTENED_DATA[nodeID];\r\n\r\n    // const i = createInterpsFromDelivs(deliveries, MAX_DELIVS);\r\n    // const ls = ticksExact(0, 1, LOD_1_LEVELS + 1).map((d) => i(d));\r\n\r\n    // const levs = ls.map(\r\n    //   (w, i) => Math.max(w, i == 0 ? LOD_2_MIN_LEV_VAL : 0) * LOD_2_RAD_PX\r\n    // );\r\n\r\n    wds.push({\r\n      ...waterdrops[id],\r\n      // levs,\r\n    });\r\n  }\r\n\r\n  return wds;\r\n}\r\n\r\nfunction updateSmallDropSVG(\r\n  container,\r\n  waterdrops,\r\n  transitionDelay,\r\n  { onClick, onHover, onUnhover }\r\n) {\r\n  container\r\n    .selectAll(\".smallDrop\")\r\n    .data(waterdrops)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"smallDrop\")\r\n        .each(function ({ levs }, i) {\r\n          // TODO replace with tooltip, remove unnec svg\r\n\r\n          const s = d3.select(this);\r\n          s.append(\"rect\").attr(\"class\", \"bbox\").style(\"visibility\", \"hidden\");\r\n\r\n          const stops = d3\r\n            .select(this)\r\n            .append(\"defs\")\r\n            .append(\"linearGradient\")\r\n            .attr(\"id\", `drop-fill-${i}`)\r\n            .attr(\"x1\", \"0%\")\r\n            .attr(\"x2\", \"0%\")\r\n            .attr(\"y1\", \"0%\")\r\n            .attr(\"y2\", \"100%\");\r\n          stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n          stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n\r\n          levs.forEach((_, i) => {\r\n            stops\r\n              .append(\"stop\")\r\n              .attr(\"stop-color\", interpolateWatercolorBlue(i / LOD_1_LEVELS));\r\n            stops\r\n              .append(\"stop\")\r\n              .attr(\"stop-color\", interpolateWatercolorBlue(i / LOD_1_LEVELS));\r\n          });\r\n\r\n          s.append(\"path\")\r\n            .attr(\"d\", DROPLET_SHAPE)\r\n            .attr(\"class\", \"outline\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"lightgray\")\r\n            .attr(\"stroke-width\", 0.05);\r\n\r\n          s.append(\"path\")\r\n            .attr(\"class\", \"fill\")\r\n            .attr(\"d\", DROPLET_SHAPE)\r\n            .attr(\"fill\", `url(#drop-fill-${i})`);\r\n\r\n          s.append(\"g\")\r\n            .attr(\"class\", \"circlet\")\r\n            .append(\"circle\")\r\n            .attr(\"fill\", \"transparent\")\r\n            .attr(\"stroke\", \"transparent\")\r\n            .attr(\"stroke-dasharray\", 3)\r\n            .attr(\"stroke-width\", 3)\r\n            .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n            .attr(\"r\", 1.5);\r\n        });\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\r\n      \"transform\",\r\n      ({ globalX, globalY, tilt, x, y }) =>\r\n        `translate(${globalX}, ${globalY}) rotate(${0})`\r\n    )\r\n    .each(function ({ levs, maxLev, key }, i) {\r\n      const s = d3.select(this);\r\n\r\n      s.select(\".outline\").attr(\"transform\", `scale(${LOD_2_RAD_PX * 0.95})`);\r\n      s.select(\".fill\").attr(\"transform\", `scale(${LOD_2_RAD_PX})`);\r\n\r\n      s.select(\".circlet\")\r\n        .attr(\"class\", null)\r\n        .attr(\"class\", \"circlet \" + key);\r\n\r\n      s.selectAll(\"stop\").each(function (_, i) {\r\n        let actI = Math.floor(i / 2);\r\n        const isEnd = i % 2;\r\n\r\n        if (isEnd === 0) actI -= 1;\r\n\r\n        if (actI === -1) {\r\n          d3.select(this).attr(\"offset\", `${0}%`);\r\n        } else if (actI === levs.length) {\r\n          d3.select(this).attr(\"offset\", `100%`);\r\n        } else {\r\n          d3.select(this).attr(\"offset\", `${(1 - levs[actI] / maxLev) * 100}%`);\r\n        }\r\n      });\r\n\r\n      const d = s.select(\".fill\");\r\n\r\n      s.select(\".bbox\")\r\n        .attr(\"x\", d.node().getBBox().x)\r\n        .attr(\"y\", d.node().getBBox().y)\r\n        .attr(\"width\", d.node().getBBox().width)\r\n        .attr(\"height\", d.node().getBBox().height);\r\n    })\r\n    .on(\"click\", function (e, d) {\r\n      onClick && onClick(d);\r\n    })\r\n    .on(\"mouseenter\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"orange\");\r\n      onHover && onHover(d);\r\n    })\r\n    .on(\"mouseleave\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"transparent\");\r\n      onUnhover && onUnhover(d);\r\n    })\r\n    .transition()\r\n    .delay(transitionDelay)\r\n    .duration(1000)\r\n    .attr(\r\n      \"transform\",\r\n      ({ globalX, globalY, tilt, x, y }) =>\r\n        `translate(${globalX + x * 0.5}, ${globalY + y * 0.5}) rotate(${0})`\r\n    );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { AppContext } from \"AppContext\";\r\n\r\nimport { GROUP_HOVER_AREA_FACTOR } from \"settings\";\r\nimport { dropsMesh, getOutlineOpac, pointsMesh, scene } from \"three-resources\";\r\nimport { isState } from \"utils/misc-utils\";\r\n\r\nexport default function WideView() {\r\n  const {\r\n    waterdrops,\r\n    state,\r\n    setState,\r\n    camera,\r\n    zoomTo,\r\n    setActiveWaterdrops,\r\n    activeWaterdrops,\r\n    setDisableCamAdjustments,\r\n  } = useContext(AppContext);\r\n\r\n  const [activeWDObjs, setActiveWDObjs] = useState([]);\r\n\r\n  useEffect(\r\n    function update() {\r\n      if (isState(state, \"WideView\")) {\r\n        const { transitionDuration = 2e3 } = state;\r\n        console.time(\"drawing\");\r\n        dropsMesh.draw(scene);\r\n        console.timeEnd(\"drawing\");\r\n\r\n        const origOpac = getOutlineOpac(camera.curTransform.k);\r\n\r\n        dropsMesh.updateVisibility(1);\r\n        dropsMesh.updateOutlineVisibility(origOpac);\r\n\r\n        const t = d3.timer((elapsed) => {\r\n          const et = Math.min(1, elapsed / (transitionDuration / 2));\r\n\r\n          // dropsMesh.updateVisibility(origOpac * et);\r\n\r\n          if (et >= 1) {\r\n            t.stop();\r\n          }\r\n        });\r\n\r\n        const container = d3.select(\"#mosaic-svg\").select(\".svg-trans\");\r\n\r\n        updateLargeDropSVG(container, waterdrops, {\r\n          onClick: (d) => {\r\n            setActiveWDObjs((wd) => {\r\n              const found = wd.findIndex((wd) => wd.key === d.key);\r\n              if (found !== -1) {\r\n                wd.splice(found, 1);\r\n              } else {\r\n                wd.push(d);\r\n              }\r\n              return [...wd];\r\n            });\r\n\r\n            setActiveWaterdrops((wd) => {\r\n              if (wd.includes(d.key)) {\r\n                wd.splice(wd.indexOf(d.key), 1);\r\n                container.select(\".circlet.\" + d.key).classed(\"active\", false);\r\n              } else {\r\n                wd.push(d.key);\r\n                container.select(\".circlet.\" + d.key).classed(\"active\", true);\r\n              }\r\n              return [...wd];\r\n            });\r\n          },\r\n        });\r\n\r\n        for (const wd of activeWDObjs) {\r\n          container.select(\".circlet.\" + wd.key).classed(\"active\", true);\r\n        }\r\n\r\n        return () => {\r\n          d3.select(\"#mosaic-svg\")\r\n            .select(\".svg-trans\")\r\n            .selectAll(\".largeDrop\")\r\n            .attr(\"display\", \"none\");\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (activeWDObjs.length == 1) {\r\n      const d = activeWDObjs[0];\r\n\r\n      const { start, duration } = zoomTo(\r\n        [d.x, d.y - d.height * 0.08, camera.getZFromFarHeight(d.height * 2)],\r\n        () => {\r\n          setDisableCamAdjustments(false);\r\n        }\r\n      );\r\n\r\n      start();\r\n\r\n      setState({ state: \"ExamineView\", transitionDuration: duration });\r\n\r\n      const origOpac = getOutlineOpac(camera.curTransform.k);\r\n      setDisableCamAdjustments(true);\r\n\r\n      const t = d3.timer((elapsed) => {\r\n        const et = Math.min(1, elapsed / (duration / 2));\r\n\r\n        dropsMesh.updateVisibility(1 - et);\r\n        dropsMesh.updateOutlineVisibility(origOpac * (1 - et));\r\n\r\n        if (et >= 1) {\r\n          t.stop();\r\n          dropsMesh.remove(scene);\r\n        }\r\n      });\r\n    } else if (activeWDObjs.length > 1) {\r\n      const coords = activeWDObjs.map((w) => [w.x, w.y]);\r\n      const avgCoord = [\r\n        d3.mean(coords, (c) => c[0]),\r\n        d3.mean(coords, (c) => c[1]),\r\n      ];\r\n      const { start, duration } = zoomTo(\r\n        [\r\n          avgCoord[0],\r\n          avgCoord[1],\r\n          camera.getZFromFarHeight(waterdrops.groups[0].height * 2 * 2),\r\n        ],\r\n        () => {\r\n          setDisableCamAdjustments(false);\r\n        }\r\n      );\r\n\r\n      start();\r\n\r\n      setState({\r\n        state: \"CompareView\",\r\n        transitionDuration: duration,\r\n        avgCoord,\r\n      });\r\n\r\n      const origOpac = getOutlineOpac(camera.curTransform.k);\r\n      setDisableCamAdjustments(true);\r\n\r\n      const t = d3.timer((elapsed) => {\r\n        const et = Math.min(1, elapsed / (duration / 5));\r\n\r\n        dropsMesh.updateVisibility(1 - et);\r\n        dropsMesh.updateOutlineVisibility(origOpac * (1 - et));\r\n\r\n        if (et >= 1) {\r\n          t.stop();\r\n\r\n          dropsMesh.remove(scene);\r\n        }\r\n      });\r\n    }\r\n  }, [activeWDObjs]);\r\n\r\n  if (isState(state, \"WideView\") && activeWaterdrops.length)\r\n    return (\r\n      <button onClick={handleClick} className=\"wide-view-action-btn\">\r\n        {activeWaterdrops.length == 1 ? \"examine >>\" : \"compare >>\"}\r\n      </button>\r\n    );\r\n}\r\n\r\nfunction updateLargeDropSVG(\r\n  container,\r\n  waterdrops,\r\n  { onClick, onHover, onUnhover }\r\n) {\r\n  console.log(\"updating svg\");\r\n  container\r\n    .selectAll(\".largeDrop\")\r\n    .data(waterdrops.groups)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"largeDrop\")\r\n        .each(function (d) {\r\n          const s = d3.select(this);\r\n\r\n          s.append(\"g\")\r\n            .attr(\"class\", \"circlet\")\r\n            .append(\"circle\")\r\n            .attr(\"fill\", \"transparent\")\r\n            .attr(\"stroke\", \"transparent\")\r\n            .attr(\"stroke-dasharray\", 3)\r\n            .attr(\"stroke-width\", 3)\r\n            .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n            .attr(\"r\", 1);\r\n        });\r\n    })\r\n    .each(function (d) {\r\n      d3.select(this)\r\n        .select(\".circlet\")\r\n        .attr(\"class\", null)\r\n        .attr(\"class\", \"circlet \" + d.key);\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\r\n      \"transform\",\r\n      ({ x, y, height }) =>\r\n        `translate(${x}, ${y - height * 0.08}) scale(${\r\n          height * GROUP_HOVER_AREA_FACTOR\r\n        })`\r\n    )\r\n    .on(\"click\", function (e, d) {\r\n      onClick && onClick(d);\r\n    })\r\n    .on(\"mouseenter\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"orange\");\r\n      onHover && onHover(d);\r\n    })\r\n    .on(\"mouseleave\", function (e, d) {\r\n      if (!d3.select(this).select(\".circlet\").classed(\"active\"))\r\n        d3.select(this).select(\"circle\").attr(\"stroke\", \"transparent\");\r\n      onUnhover && onUnhover(d);\r\n    });\r\n}\r\n"],"names":["waterdrops","initWaterdrops","appWidth","window","innerWidth","appHeight","innerHeight","App","state","setState","stateRef","useStateRef","activeWaterdrops","setActiveWaterdrops","useState","goBack","setGoBack","disableCamAdjustments","setDisableCamAdjustments","disableCamAdjustmentsRef","useEffect","document","querySelector","appendChild","renderer","domElement","d3","attr","append","camera","mount","node","select","setZoomFn","transform","current","dropsMesh","updateOutlineVisibility","getOutlineOpac","k","setSize","setAnimationLoop","render","scene","resetCamera","useCallback","animated","arguments","length","undefined","callback","pos","height","getZFromFarHeight","start","zoomTo","callZoomFromWorldViewport","worldX","worldY","farHeight","xyz","i","interpolateZoomCamera","duration","t","elapsed","et","Math","min","callZoom","stop","_jsxs","AppContext","Provider","value","pointsMesh","children","className","_jsx","id","WideView","ExamineView","CompareView","onClick","grouping","groupKeys","OBJECTIVE_IDS","SCENARIO_IDS","memberKeys","amtPerGroup","largeDropRad","sqrt","PI","LOD_2_RAD_PX","LOD_2_SMALL_DROP_PAD_FACTOR","LOD_2_LARGE_DROP_PAD_FACTOR","smallDropRad","largeNodesPhys","placeDropsUsingPhysics","map","p","idx","r","largeNodesPos","mapBy","_ref","smallNodesPhys","s","smallNodesPos","_ref2","nodes","groupNodes","groupToNodes","nodeData","FLATTENED_DATA","objective","scenario","deliveries","createInterpsFromDelivs","MAX_DELIVS","levs","ticksExact","LOD_2_LEVELS","d","w","max","LOD_2_MIN_LEV_VAL","groupID","memberID","groupRank","DATA_GROUPINGS","rank","memberRank","maxLev","domLev","calcDomLev","tilt","random","dur","x","y","group","key","globalX","globalY","push","groupKey","groups","console","time","createMesh","timeEnd","createContext","count","interpolateWatercolorBlue","SCEN_DIVISOR","SCENARIO_KEY_STRING","DELIV_KEY_STRING","OBJECTIVES_DATA","async","objs","fetch","json","obj","scen","unord","v","clamp","Array","from","sort","a","b","name","log","Object","keys","values","filter","_","flattenedData","dataGroupings","means","orderedDataGroupings","criteria","asdfasdf","ids","sortedObjScens","sorted","mean","flat","IDtoRank","j","LOD_1_LEVELS","GROUP_HOVER_AREA_FACTOR","SQRT1_2","THREE","background","WaterdropMesh","WaterdropSimplifiedMesh","Camera","fov","near","far","antialias","domain","range","delivs","maxDelivs","generateWaterdrop","width","rad","delta","outer","cos","sin","SQRT2","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","reuse","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","generateRandoPoints","WIDTH_AREA","AREA","floor","radsToDropWidth","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","_ref3","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","retVal","_ref4","CIRC_RAD","DROP_HEIGHT","toRadians","fn","newObjs","groupBy","sortBy","array","object","path","defaultValue","_object","split","part","get","pick","va","vb","val","_setState","useRef","curVal","isState","stateInfo","stateName","DROPLET_SHAPE","DROP_RAD","CIRC_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","yToSpriteY","spriteYToY","sy","waterdropDelta","yStart","yEnd","size","abs","Y_DELTA","dx1","dy1","dx2","dy2","ceil","v1","v2","v3","v4","MeshGeometry","constructor","numPoints","color","threeGeom","triangleIdx","this","setAttribute","Float32Array","positionAttribute","getAttribute","colorAttribute","addMeshCoords","meshCoords","z","setXYZ","g","finish","setDrawRange","added","updateMeshes","initializeMeshes","draw","outlineMesh","remove","dropsGeometry","MAX_POINTS_DROPS","outlinePoints","outlineMeshCoords","rightCoords","leftCoords","reverse","waterdropDeltaOutline","dx","dy","vertexColors","transparent","opacity","setFromPoints","opac","material","needsUpdate","updateVisibility","MAX_POINTS_OUTLINE","vertToId","idToVert","mesh","initializeMesh","updateMesh","pointsGeometry","colors","t_color","pointsMaterial","sizeAttenuation","load","positionAttr","geometry","newX","newY","setXY","updatePoints","translations","dt","verts","setX","setY","verticesNeedUpdate","intersectObject","intersects","intersect","index","raycaster","zoomFn","zoom","on","e","curTransform","_THREEZoomHandler","_svgElement","view","translate","tan","getFarHeightFromZ","endx","endy","endz","interper","webglElement","svgElement","scaleExtent","getScaleFromZ","set","call","getZFromScale","camera_z_position","half_fov","half_fov_radians","fov_height","mouseX","mouseY","setFromCamera","useContext","activeMinidrop","setActiveMinidrop","groupsRef","positions","groupPos","groupPositions","find","n","lines","to","len","normed","selectAll","data","join","style","transition","container","waterdropGroups","transitionDelay","onHover","onUnhover","enter","each","randId","stops","concat","forEach","_ref5","_ref6","_ref7","actI","getBBox","delay","_ref8","updateDropsSVG","keyArr","center","includes","getWaterdropGroups","avgCoord","transitionDuration","updateSmallDropSVG","getWaterdrops","_Fragment","nodeArr","wds","nodeID","classed","activeWDObjs","setActiveWDObjs","origOpac","updateLargeDropSVG","wd","found","findIndex","splice","indexOf","handleClick","c"],"sourceRoot":""}